{
  "fileName": "RealityMarket.sol",
  "contractName": "RealityMarket",
  "source": "// SPDX-License-Identifier: Unlicense\n\npragma solidity 0.6.12;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/math/SignedSafeMath.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/SafeCast.sol\";\nimport \"./ForesightVault.sol\";\nimport \"./MarketVoting.sol\";\n\n/// @title RealityMarket\n/// @notice Generate a reality market and appropriate mint/burn tokens.\n/// @dev\ncontract RealityMarket is ReentrancyGuard {\n    using SafeMath for uint;\n    using SignedSafeMath for int;\n    /// @notice Base currency token address used to mint Foresight.\n    address public currencyAddress;\n    /// @notice Base currency token used to mint Foresight.\n    IERC20 public currencyToken;\n    /// @notice Address for the Vision token.\n    address public visionAddress;\n    /// @notice Vision token Instance.\n    IERC20 public visionToken;\n    /// @notice The boolean representing if a market is binary. If not, it is scalar.\n    bool public marketTypeBinary;\n    /// @notice Market Question.\n    string public question;\n    /// @dev Constant representing the YESSHORT option.\n    string private constant YESSHORT = \"YESSHORT\";\n    /// @dev Constant representing the NOLONG option.\n    string private constant NOLONG = \"NOLONG\";\n    /// @dev Constant representing the INVALID option.\n    string private constant INVALID = \"INVALID\";\n\n    /// @notice Least range endpoint. Necessary for reification of markets and UIs.\n    string public rangeStart;\n    /// @notice Maximum range endpoint. Necessary for reification of markets and UIs.\n    string public rangeEnd;\n    /// @notice Winning outcome after voting.\n    /// @notice Close of public voting on market outcomes.\n    uint public votingEndTime;\n\n    /// @notice Instance of the voting contract.\n    MarketVoting public voting;\n    /// @notice Address for the Voting contract.\n    address public votingAddress;\n    /// @notice Instance of the Foresight Vault contract.\n    ForesightVault public foresightVault;\n\n    /// @notice Sets all base values for the market and sets up Voting and Token Vault.\n    /// @param setMarketTypeBinary Signals if market is Binary or Scalar.\n    /// @param setQuestion Determines market question.\n    /// @param setVotingEndTime Sets the end of public voting on market outcomes.\n    /// @param setCurrencyAddress Location of the currency used to mint Foresight.\n    /// @param setVisionAddress Location of the Voting currency used to determine market reification.\n    /// @param setRangeStart Least range endpoint. Necessary for reification of markets and UIs.\n    /// @param setRangeEnd Maximum range endpoint. Necessary for reification of markets and UIs.\n    constructor(\n        bool setMarketTypeBinary,\n        string memory setQuestion,\n        uint setVotingEndTime,\n        address setCurrencyAddress,\n        address setVisionAddress,\n        string memory setRangeStart,\n        string memory setRangeEnd\n    ) public {\n        require(block.timestamp < setVotingEndTime, \"end time must be after start\");\n        marketTypeBinary = setMarketTypeBinary;\n        votingEndTime = setVotingEndTime;\n        question = setQuestion;\n        currencyToken = IERC20(setCurrencyAddress);\n        currencyAddress = setCurrencyAddress;\n        visionToken = IERC20(setVisionAddress);\n        visionAddress = setVisionAddress;\n        rangeStart = setRangeStart;\n        rangeEnd = setRangeEnd;\n        foresightVault = new ForesightVault(address(this));\n        voting = new MarketVoting(setMarketTypeBinary, setVotingEndTime, visionAddress);\n        votingAddress = address(voting);\n    }\n\n    /// @notice Create a complete set of tokens using the currencyToken 1 to 1 and store it.\n    /// @dev Requires currency token approval.\n    /// @param amount Amount of currency to take and number of shares to mint.\n    function mintCompleteSets(uint amount) public {\n        currencyToken.transferFrom(msg.sender, address(this), amount);\n        foresightVault.mintCompleteSets(msg.sender, amount);\n    }\n\n    /// @notice Burns a complete set of Foresight tokens for the given amount and returns currency.\n    /// @param amount Amount of Foresight of each token to burn.\n    function burnCompleteSets(uint amount) public nonReentrant {\n        foresightVault.burnYesShort(msg.sender, amount);\n        foresightVault.burnNoLong(msg.sender, amount);\n        foresightVault.burnInvalid(msg.sender, amount);\n        currencyToken.transferFrom(address(this), msg.sender, amount);\n    }\n\n    /// @notice Passes vote to the voting construct.\n    /// @param outcome Outcome to vote on.\n    /// @param amount Amount of Vision token to stake on a vote.\n    function vote(int outcome, uint amount) public {\n        voting.vote(outcome, amount);\n    }\n\n    /// @notice returns voting winning outcome.\n    function winningOutcome() public returns (int) {\n        return voting.winningOutcome();\n    }\n\n    /// @notice Asserts voting is completed.\n    /// @dev Votes are completed when the timestamp is after the votingEndTime.\n    modifier assertVotingCompleted {\n        require(block.timestamp > votingEndTime, \"Vote is not yet completed\");\n        _;\n    }\n\n    /// @notice Withdraws winning token currency based on voting outcomes for binary market.\n    /// @param amount Amount of currency to swap.\n    function withdrawPayoutBinary(uint amount) public assertVotingCompleted nonReentrant {\n        require(marketTypeBinary, \"wrong payout for binary market\");\n        // Case if voting was deemed invalid.\n        if (voting.winningOutcome() == -1e18) {\n            foresightVault.burnInvalid(msg.sender, amount);\n            currencyToken.transfer(msg.sender, 1e18);\n        }\n        //Case if\n        if (voting.winningOutcome() == 1e18) {\n            foresightVault.burnYesShort(msg.sender, amount);\n            currencyToken.transfer(msg.sender, 1e18);\n        }\n        if (voting.winningOutcome() == 0) {\n            foresightVault.burnNoLong(msg.sender, amount);\n            currencyToken.transfer(msg.sender, 0);\n        }\n    }\n\n    /// @notice Computes the linear payout for Invalid tokens for the market.\n    /// @param amount Amount of currency to swap.\n    function withdrawPayoutLinearInvalid(uint amount) public assertVotingCompleted nonReentrant {\n        if (voting.winningOutcome() == -1e18) {\n            foresightVault.burnInvalid(msg.sender, amount);\n            currencyToken.transfer(msg.sender, 1e18);\n        }\n    }\n\n    /// @notice Computes the linear payout for YesShort tokens for the market.\n    /// @param amount Amount of currency to swap.\n    function withdrawPayoutLinearYesShort(uint amount) public assertVotingCompleted nonReentrant {\n        foresightVault.burnYesShort(msg.sender, amount);\n        uint res = SafeCast.toUint256(voting.winningOutcome());\n        currencyToken.transfer(msg.sender, 1e18 - res);\n    }\n\n    /// @notice Computes the linear payout for NoLong tokens for the market.\n    /// @param amount Amount of currency to swap.\n    function withdrawPayoutLinearNoLong(uint amount) public assertVotingCompleted nonReentrant {\n        foresightVault.burnNoLong(msg.sender, amount);\n        uint res = SafeCast.toUint256(voting.winningOutcome());\n        currencyToken.transfer(msg.sender, res);\n    }\n}\n",
  "sourcePath": "contracts/RealityMarket.sol",
  "sourceMap": "511:6839:24:-:0;;;2771:927;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2771:927:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2771:927:24;;;;;-1:-1:-1;;2771:927:24;;;;;;;;;;-1:-1:-1;2771:927:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2771:927:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2771:927:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2771:927:24;;;;;-1:-1:-1;;2771:927:24;;;;;;;;;;-1:-1:-1;2771:927:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2771:927:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2771:927:24;;;;;-1:-1:-1;;2771:927:24;;;;;;;;;;-1:-1:-1;2771:927:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2771:927:24;;-1:-1:-1;;1628:1:12;1743:7;:22;-1:-1:-1;3056:15:24;:34;-1:-1:-1;3048:75:24;;;;;-1:-1:-1;;;3048:75:24;;;;;;;;;;;;-1:-1:-1;;;3048:75:24;;;;;;;;;;;;;;;3133:16;:38;;-1:-1:-1;;;;3133:38:24;-1:-1:-1;;;3133:38:24;;;;;;;3181:13;:32;;;3223:22;;;;:8;;:22;;;;;:::i;:::-;-1:-1:-1;3255:13:24;:42;;-1:-1:-1;;;;;;3255:42:24;;;-1:-1:-1;;;;;3255:42:24;;;;;;;;;-1:-1:-1;3307:36:24;;;;;;;;;3353:11;:38;;;;;;;;;;;;3401:13;:32;;;;;;;;;;3443:26;;;;:10;;:26;;;;;:::i;:::-;-1:-1:-1;3479:22:24;;;;:8;;:22;;;;;:::i;:::-;;3555:4;3528:33;;;;;:::i;:::-;-1:-1:-1;;;;;3528:33:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3511:14:24;:50;;-1:-1:-1;;;;;;3511:50:24;-1:-1:-1;;;;;3511:50:24;;;;;;3636:13;;3580:70;;3597:19;;3618:16;;3636:13;;3580:70;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;3580:70:24;;;;;;;;;;;;;;;;;-1:-1:-1;3580:70:24;;;;;;;;;;;;;;;-1:-1:-1;3571:6:24;:79;;-1:-1:-1;;;;;;3571:79:24;;;-1:-1:-1;;;;;3571:79:24;;;;;;;;3660:13;:31;;3684:6;;;;3660:31;;;;;-1:-1:-1;511:6839:24;;-1:-1:-1;;;;;;511:6839:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;511:6839:24;;;-1:-1:-1;511:6839:24;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "511:6839:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5399:733;;;;;;;;;;;;;;;;-1:-1:-1;5399:733:24;;:::i;:::-;;6672:277;;;;;;;;;;;;;;;;-1:-1:-1;6672:277:24;;:::i;2050:36::-;;;:::i;:::-;;;;-1:-1:-1;;;;;2050:36:24;;;;;;;;;;;;;;690:30;;;:::i;1796:25::-;;;:::i;:::-;;;;;;;;;;;;;;;;1055:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;4751:92;;;;;;;;;;;;;;;;-1:-1:-1;4751:92:24;;;;;;;:::i;1122:22::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1663;;;:::i;865:28::-;;;:::i;786:27::-;;;:::i;1547:24::-;;;:::i;4897:94::-;;;:::i;7082:266::-;;;;;;;;;;;;;;;;-1:-1:-1;7082:266:24;;:::i;1958:28::-;;;:::i;6266:271::-;;;;;;;;;;;;;;;;-1:-1:-1;6266:271:24;;:::i;3923:185::-;;;;;;;;;;;;;;;;-1:-1:-1;3923:185:24;;:::i;938:25::-;;;:::i;4279:305::-;;;;;;;;;;;;;;;;-1:-1:-1;4279:305:24;;:::i;1877:26::-;;;:::i;5399:733::-;5189:13;;5171:15;:31;5163:69;;;;;-1:-1:-1;;;5163:69:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5163:69:24;;;;;;;;;;;;;;;1671:1:12::1;2260:7;;:19;;2252:63;;;::::0;;-1:-1:-1;;;2252:63:12;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;2252:63:12;;;;;;;;;;;;;::::1;;1671:1;2390:7;:18:::0;5502:16:24::2;::::0;-1:-1:-1;;;5502:16:24;::::2;;;5494:59;;;::::0;;-1:-1:-1;;;5494:59:24;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;5613:6;::::0;:23:::2;::::0;;-1:-1:-1;;;5613:23:24;;;;-1:-1:-1;;;;;5613:6:24;;::::2;::::0;-1:-1:-1;;5613:23:24::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;:6:::2;::::0;:23;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;5613:23:24;-1:-1:-1;;5613:32:24::2;5609:163;;;5661:14;::::0;:46:::2;::::0;;-1:-1:-1;;;5661:46:24;;5688:10:::2;5661:46;::::0;::::2;::::0;;;;;;;;;-1:-1:-1;;;;;5661:14:24;;::::2;::::0;:26:::2;::::0;:46;;;;;-1:-1:-1;;5661:46:24;;;;;;;;-1:-1:-1;5661:14:24;:46;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;5721:13:24::2;::::0;:40:::2;::::0;;-1:-1:-1;;;5721:40:24;;5744:10:::2;5721:40;::::0;::::2;::::0;5756:4:::2;5721:40:::0;;;;;;-1:-1:-1;;;;;5721:13:24;;::::2;::::0;-1:-1:-1;;;;5721:40:24;;;;;::::2;::::0;;;;;;;;;-1:-1:-1;5721:13:24;:40;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;;5609:163:24::2;5803:6;::::0;:23:::2;::::0;;-1:-1:-1;;;5803:23:24;;;;-1:-1:-1;;;;;5803:6:24;;::::2;::::0;-1:-1:-1;;5803:23:24::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;:6:::2;::::0;:23;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;5803:23:24;5830:4:::2;5803:31;5799:163;;;5850:14;::::0;:47:::2;::::0;;-1:-1:-1;;;5850:47:24;;5878:10:::2;5850:47;::::0;::::2;::::0;;;;;;;;;-1:-1:-1;;;;;5850:14:24;;::::2;::::0;:27:::2;::::0;:47;;;;;-1:-1:-1;;5850:47:24;;;;;;;;-1:-1:-1;5850:14:24;:47;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;5911:13:24::2;::::0;:40:::2;::::0;;-1:-1:-1;;;5911:40:24;;5934:10:::2;5911:40;::::0;::::2;::::0;5946:4:::2;5911:40:::0;;;;;;-1:-1:-1;;;;;5911:13:24;;::::2;::::0;-1:-1:-1;;;;5911:40:24;;;;;::::2;::::0;;;;;;;;;-1:-1:-1;5911:13:24;:40;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;;5799:163:24::2;5975:6;::::0;:23:::2;::::0;;-1:-1:-1;;;5975:23:24;;;;-1:-1:-1;;;;;5975:6:24;;::::2;::::0;-1:-1:-1;;5975:23:24::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;:6:::2;::::0;:23;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;5975:23:24;5971:155:::2;;6019:14;::::0;:45:::2;::::0;;-1:-1:-1;;;6019:45:24;;6045:10:::2;6019:45;::::0;::::2;::::0;;;;;;;;;-1:-1:-1;;;;;6019:14:24;;::::2;::::0;:25:::2;::::0;:45;;;;;-1:-1:-1;;6019:45:24;;;;;;;;-1:-1:-1;6019:14:24;:45;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;6078:13:24::2;::::0;:37:::2;::::0;;-1:-1:-1;;;6078:37:24;;6101:10:::2;6078:37;::::0;::::2;::::0;-1:-1:-1;6078:37:24;;;;;;;;-1:-1:-1;;;;;6078:13:24;;::::2;::::0;-1:-1:-1;;;;6078:37:24;;;;;::::2;::::0;;;;;;;;;;;;:13;:37;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;;5971:155:24::2;-1:-1:-1::0;1628:1:12::1;2563:7;:22:::0;5399:733:24:o;6672:277::-;5189:13;;5171:15;:31;5163:69;;;;;-1:-1:-1;;;5163:69:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5163:69:24;;;;;;;;;;;;;;;1671:1:12::1;2260:7;;:19;;2252:63;;;::::0;;-1:-1:-1;;;2252:63:12;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;2252:63:12;;;;;;;;;;;;;::::1;;1671:1;2390:7;:18:::0;;;6775:14:24::2;::::0;:47:::2;::::0;;-1:-1:-1;;;6775:47:24;;6803:10:::2;6775:47;::::0;::::2;::::0;;;;;;;;;-1:-1:-1;;;;;6775:14:24;;::::2;::::0;:27:::2;::::0;:47;;;;;;;;;;2390:7:12;6775:14:24;:47;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;6862:6:24::2;::::0;:23:::2;::::0;;-1:-1:-1;;;6862:23:24;;;;6832:8:::2;::::0;-1:-1:-1;6843:43:24::2;::::0;-1:-1:-1;;;;;;6862:6:24;;::::2;::::0;-1:-1:-1;;6862:23:24::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;6832:8;6862:6;:23;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;6862:23:24;6843:18:::2;:43::i;:::-;6896:13;::::0;:46:::2;::::0;;-1:-1:-1;;;6896:46:24;;6919:10:::2;6896:46;::::0;::::2;::::0;6931:4:::2;:10:::0;;::::2;6896:46:::0;;;;;;6931:10;;-1:-1:-1;;;;;;6896:13:24;;::::2;::::0;-1:-1:-1;;6896:46:24;;;;;::::2;::::0;;;;;;;;;-1:-1:-1;6896:13:24;:46;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;;1628:1:12::1;2563:7;:22:::0;-1:-1:-1;;6672:277:24:o;2050:36::-;;;-1:-1:-1;;;;;2050:36:24;;:::o;690:30::-;;;-1:-1:-1;;;;;690:30:24;;:::o;1796:25::-;;;;:::o;1055:28::-;;;-1:-1:-1;;;1055:28:24;;;;;:::o;4751:92::-;4808:6;;:28;;;-1:-1:-1;;;4808:28:24;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4808:6:24;;;;:11;;:28;;;;;-1:-1:-1;;4808:28:24;;;;;;;;-1:-1:-1;4808:6:24;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4751:92;;:::o;1122:22::-;;;;;;;;;;;;;;;-1:-1:-1;;1122:22:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1663:::-;;;;;;;;;;;;;;;-1:-1:-1;;1663:22:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;865:28;;;-1:-1:-1;;;;;865:28:24;;:::o;786:27::-;;;-1:-1:-1;;;;;786:27:24;;:::o;1547:24::-;;;;;;;;;;;;;;;-1:-1:-1;;1547:24:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4897:94;4961:6;;:23;;;-1:-1:-1;;;4961:23:24;;;;4939:3;;-1:-1:-1;;;;;4961:6:24;;-1:-1:-1;;4961:23:24;;;;;;;;;;;;;;4939:3;4961:6;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4961:23:24;;-1:-1:-1;4897:94:24;:::o;7082:266::-;5189:13;;5171:15;:31;5163:69;;;;;-1:-1:-1;;;5163:69:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5163:69:24;;;;;;;;;;;;;;;1671:1:12::1;2260:7;;:19;;2252:63;;;::::0;;-1:-1:-1;;;2252:63:12;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;2252:63:12;;;;;;;;;;;;;::::1;;1671:1;2390:7;:18:::0;;;7183:14:24::2;::::0;:45:::2;::::0;;-1:-1:-1;;;7183:45:24;;7209:10:::2;7183:45;::::0;::::2;::::0;;;;;;;;;-1:-1:-1;;;;;7183:14:24;;::::2;::::0;:25:::2;::::0;:45;;;;;;;;;;2390:7:12;7183:14:24;:45;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;7268:6:24::2;::::0;:23:::2;::::0;;-1:-1:-1;;;7268:23:24;;;;7238:8:::2;::::0;-1:-1:-1;7249:43:24::2;::::0;-1:-1:-1;;;;;;7268:6:24;;::::2;::::0;-1:-1:-1;;7268:23:24::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;7238:8;7268:6;:23;::::2;;::::0;::::2;;;;::::0;::::2;7249:43;7302:13;::::0;:39:::2;::::0;;-1:-1:-1;;;7302:39:24;;7325:10:::2;7302:39;::::0;::::2;::::0;;;;;;;;;;;-1:-1:-1;;;;;;7302:13:24;;::::2;::::0;-1:-1:-1;;7302:39:24;;;;;::::2;::::0;;;;;;;;;-1:-1:-1;7302:13:24;:39;::::2;;::::0;::::2;;;;::::0;::::2;1958:28:::0;;;-1:-1:-1;;;;;1958:28:24;;:::o;6266:271::-;5189:13;;5171:15;:31;5163:69;;;;;-1:-1:-1;;;5163:69:24;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5163:69:24;;;;;;;;;;;;;;;1671:1:12::1;2260:7;;:19;;2252:63;;;::::0;;-1:-1:-1;;;2252:63:12;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;2252:63:12;;;;;;;;;;;;;::::1;;1671:1;2390:7;:18:::0;;;6372:6:24::2;::::0;:23:::2;::::0;;-1:-1:-1;;;6372:23:24;;;;-1:-1:-1;;;;;6372:6:24;;::::2;::::0;-1:-1:-1;;6372:23:24::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;;;:6;:23;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;6372:23:24;-1:-1:-1;;6372:32:24::2;6368:163;;;6420:14;::::0;:46:::2;::::0;;-1:-1:-1;;;6420:46:24;;6447:10:::2;6420:46;::::0;::::2;::::0;;;;;;;;;-1:-1:-1;;;;;6420:14:24;;::::2;::::0;:26:::2;::::0;:46;;;;;-1:-1:-1;;6420:46:24;;;;;;;;-1:-1:-1;6420:14:24;:46;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;6480:13:24::2;::::0;:40:::2;::::0;;-1:-1:-1;;;6480:40:24;;6503:10:::2;6480:40;::::0;::::2;::::0;6515:4:::2;6480:40:::0;;;;;;-1:-1:-1;;;;;6480:13:24;;::::2;::::0;-1:-1:-1;;;;6480:40:24;;;;;::::2;::::0;;;;;;;;;-1:-1:-1;6480:13:24;:40;::::2;;::::0;::::2;;;;::::0;::::2;3923:185:::0;3979:13;;:61;;;-1:-1:-1;;;3979:61:24;;4006:10;3979:61;;;;4026:4;3979:61;;;;;;;;;;;;-1:-1:-1;;;;;3979:13:24;;;;-1:-1:-1;;3979:61:24;;;;;;;;;;;;;;;-1:-1:-1;3979:13:24;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4050:14:24;;:51;;;-1:-1:-1;;;4050:51:24;;4082:10;4050:51;;;;;;;;;;;;-1:-1:-1;;;;;4050:14:24;;;;:31;;:51;;;;;-1:-1:-1;;4050:51:24;;;;;;;;-1:-1:-1;4050:14:24;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3923:185;:::o;938:25::-;;;-1:-1:-1;;;;;938:25:24;;:::o;4279:305::-;1671:1:12;2260:7;;:19;;2252:63;;;;;-1:-1:-1;;;2252:63:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2252:63:12;;;;;;;;;;;;;;;1671:1;2390:7;:18;;;4348:14:24::1;::::0;:47:::1;::::0;;-1:-1:-1;;;4348:47:24;;4376:10:::1;4348:47;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;;;;;4348:14:24;;::::1;::::0;:27:::1;::::0;:47;;;;;;;;;;2390:7:12;4348:14:24;:47;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4405:14:24::1;::::0;:45:::1;::::0;;-1:-1:-1;;;4405:45:24;;4431:10:::1;4405:45;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;;;;;4405:14:24;;::::1;::::0;-1:-1:-1;4405:25:24::1;::::0;-1:-1:-1;4405:45:24;;;;;-1:-1:-1;;4405:45:24;;;;;;;;-1:-1:-1;4405:14:24;:45;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4460:14:24::1;::::0;:46:::1;::::0;;-1:-1:-1;;;4460:46:24;;4487:10:::1;4460:46;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;;;;;4460:14:24;;::::1;::::0;-1:-1:-1;4460:26:24::1;::::0;-1:-1:-1;4460:46:24;;;;;-1:-1:-1;;4460:46:24;;;;;;;;-1:-1:-1;4460:14:24;:46;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4516:13:24::1;::::0;:61:::1;::::0;;-1:-1:-1;;;4516:61:24;;4551:4:::1;4516:61;::::0;::::1;::::0;4558:10:::1;4516:61:::0;;;;;;;;;;;;-1:-1:-1;;;;;4516:13:24;;::::1;::::0;-1:-1:-1;;;;4516:61:24;;;;;::::1;::::0;;;;;;;;;-1:-1:-1;4516:13:24;:61;::::1;;::::0;::::1;;;;::::0;::::1;1877:26:::0;;;-1:-1:-1;;;;;1877:26:24;;:::o;3274:168:13:-;3330:7;3366:1;3357:5;:10;;3349:55;;;;;-1:-1:-1;;;3349:55:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3429:5:13;3274:168::o",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "setMarketTypeBinary",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "setQuestion",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "setVotingEndTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "setCurrencyAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "setVisionAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "setRangeStart",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "setRangeEnd",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnCompleteSets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currencyAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currencyToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "foresightVault",
      "outputs": [
        {
          "internalType": "contract ForesightVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketTypeBinary",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mintCompleteSets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "question",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rangeEnd",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rangeStart",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "visionAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "visionToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "outcome",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voting",
      "outputs": [
        {
          "internalType": "contract MarketVoting",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingEndTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winningOutcome",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawPayoutBinary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawPayoutLinearInvalid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawPayoutLinearNoLong",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawPayoutLinearYesShort",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "ast": {
    "absolutePath": "contracts/RealityMarket.sol",
    "exportedSymbols": {
      "RealityMarket": [
        4549
      ]
    },
    "id": 4550,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4084,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:24"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 4085,
        "nodeType": "ImportDirective",
        "scope": 4550,
        "sourceUnit": 1182,
        "src": "64:56:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 4086,
        "nodeType": "ImportDirective",
        "scope": 4550,
        "sourceUnit": 418,
        "src": "121:51:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SignedSafeMath.sol",
        "file": "@openzeppelin/contracts/math/SignedSafeMath.sol",
        "id": 4087,
        "nodeType": "ImportDirective",
        "scope": 4550,
        "sourceUnit": 597,
        "src": "173:57:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
        "id": 4088,
        "nodeType": "ImportDirective",
        "scope": 4550,
        "sourceUnit": 2725,
        "src": "231:59:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/SafeCast.sol",
        "file": "@openzeppelin/contracts/utils/SafeCast.sol",
        "id": 4089,
        "nodeType": "ImportDirective",
        "scope": 4550,
        "sourceUnit": 3038,
        "src": "291:52:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ForesightVault.sol",
        "file": "./ForesightVault.sol",
        "id": 4090,
        "nodeType": "ImportDirective",
        "scope": 4550,
        "sourceUnit": 3374,
        "src": "344:30:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/MarketVoting.sol",
        "file": "./MarketVoting.sol",
        "id": 4091,
        "nodeType": "ImportDirective",
        "scope": 4550,
        "sourceUnit": 3876,
        "src": "375:28:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4093,
              "name": "ReentrancyGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2724,
              "src": "537:15:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReentrancyGuard_$2724",
                "typeString": "contract ReentrancyGuard"
              }
            },
            "id": 4094,
            "nodeType": "InheritanceSpecifier",
            "src": "537:15:24"
          }
        ],
        "contractDependencies": [
          2724,
          3373,
          3875
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 4092,
          "nodeType": "StructuredDocumentation",
          "src": "405:106:24",
          "text": "@title RealityMarket\n @notice Generate a reality market and appropriate mint/burn tokens.\n @dev"
        },
        "fullyImplemented": true,
        "id": 4549,
        "linearizedBaseContracts": [
          4549,
          2724
        ],
        "name": "RealityMarket",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4097,
            "libraryName": {
              "contractScope": null,
              "id": 4095,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 417,
              "src": "565:8:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$417",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "559:24:24",
            "typeName": {
              "id": 4096,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "578:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 4100,
            "libraryName": {
              "contractScope": null,
              "id": 4098,
              "name": "SignedSafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 596,
              "src": "594:14:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SignedSafeMath_$596",
                "typeString": "library SignedSafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "588:29:24",
            "typeName": {
              "id": 4099,
              "name": "int",
              "nodeType": "ElementaryTypeName",
              "src": "613:3:24",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 4101,
              "nodeType": "StructuredDocumentation",
              "src": "622:63:24",
              "text": "@notice Base currency token address used to mint Foresight."
            },
            "functionSelector": "1c1cb323",
            "id": 4103,
            "mutability": "mutable",
            "name": "currencyAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4549,
            "src": "690:30:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4102,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "690:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4104,
              "nodeType": "StructuredDocumentation",
              "src": "726:55:24",
              "text": "@notice Base currency token used to mint Foresight."
            },
            "functionSelector": "6b2fa374",
            "id": 4106,
            "mutability": "mutable",
            "name": "currencyToken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4549,
            "src": "786:27:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1181",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 4105,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1181,
              "src": "786:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1181",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4107,
              "nodeType": "StructuredDocumentation",
              "src": "819:41:24",
              "text": "@notice Address for the Vision token."
            },
            "functionSelector": "6279cb27",
            "id": 4109,
            "mutability": "mutable",
            "name": "visionAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4549,
            "src": "865:28:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4108,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "865:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4110,
              "nodeType": "StructuredDocumentation",
              "src": "899:34:24",
              "text": "@notice Vision token Instance."
            },
            "functionSelector": "f2fd83e0",
            "id": 4112,
            "mutability": "mutable",
            "name": "visionToken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4549,
            "src": "938:25:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1181",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 4111,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1181,
              "src": "938:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1181",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4113,
              "nodeType": "StructuredDocumentation",
              "src": "969:81:24",
              "text": "@notice The boolean representing if a market is binary. If not, it is scalar."
            },
            "functionSelector": "2f13835d",
            "id": 4115,
            "mutability": "mutable",
            "name": "marketTypeBinary",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4549,
            "src": "1055:28:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4114,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1055:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4116,
              "nodeType": "StructuredDocumentation",
              "src": "1089:28:24",
              "text": "@notice Market Question."
            },
            "functionSelector": "3fad9ae0",
            "id": 4118,
            "mutability": "mutable",
            "name": "question",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4549,
            "src": "1122:22:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4117,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1122:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 4119,
              "nodeType": "StructuredDocumentation",
              "src": "1150:51:24",
              "text": "@dev Constant representing the YESSHORT option."
            },
            "id": 4122,
            "mutability": "constant",
            "name": "YESSHORT",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4549,
            "src": "1206:45:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 4120,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1206:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "59455353484f5254",
              "id": 4121,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1241:10:24",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_02e4190d483cfbd81911ecb0f746703940cbb338fc3351fc071c84568849ca9b",
                "typeString": "literal_string \"YESSHORT\""
              },
              "value": "YESSHORT"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "documentation": {
              "id": 4123,
              "nodeType": "StructuredDocumentation",
              "src": "1257:49:24",
              "text": "@dev Constant representing the NOLONG option."
            },
            "id": 4126,
            "mutability": "constant",
            "name": "NOLONG",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4549,
            "src": "1311:41:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 4124,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1311:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4e4f4c4f4e47",
              "id": 4125,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1344:8:24",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_8bd375dc90f4353ebe24aa6af65cc962cb57dfe26bc3d12ea6e82aa440f82845",
                "typeString": "literal_string \"NOLONG\""
              },
              "value": "NOLONG"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "documentation": {
              "id": 4127,
              "nodeType": "StructuredDocumentation",
              "src": "1358:50:24",
              "text": "@dev Constant representing the INVALID option."
            },
            "id": 4130,
            "mutability": "constant",
            "name": "INVALID",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4549,
            "src": "1413:43:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 4128,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1413:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "494e56414c4944",
              "id": 4129,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1447:9:24",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879",
                "typeString": "literal_string \"INVALID\""
              },
              "value": "INVALID"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4131,
              "nodeType": "StructuredDocumentation",
              "src": "1463:79:24",
              "text": "@notice Least range endpoint. Necessary for reification of markets and UIs."
            },
            "functionSelector": "7920c127",
            "id": 4133,
            "mutability": "mutable",
            "name": "rangeStart",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4549,
            "src": "1547:24:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4132,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1547:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4134,
              "nodeType": "StructuredDocumentation",
              "src": "1577:81:24",
              "text": "@notice Maximum range endpoint. Necessary for reification of markets and UIs."
            },
            "functionSelector": "5c99ee01",
            "id": 4136,
            "mutability": "mutable",
            "name": "rangeEnd",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4549,
            "src": "1663:22:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4135,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1663:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4137,
              "nodeType": "StructuredDocumentation",
              "src": "1691:100:24",
              "text": "@notice Winning outcome after voting.\n @notice Close of public voting on market outcomes."
            },
            "functionSelector": "1ea736e0",
            "id": 4139,
            "mutability": "mutable",
            "name": "votingEndTime",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4549,
            "src": "1796:25:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4138,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1796:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4140,
              "nodeType": "StructuredDocumentation",
              "src": "1828:44:24",
              "text": "@notice Instance of the voting contract."
            },
            "functionSelector": "fce1ccca",
            "id": 4142,
            "mutability": "mutable",
            "name": "voting",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4549,
            "src": "1877:26:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MarketVoting_$3875",
              "typeString": "contract MarketVoting"
            },
            "typeName": {
              "contractScope": null,
              "id": 4141,
              "name": "MarketVoting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3875,
              "src": "1877:12:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketVoting_$3875",
                "typeString": "contract MarketVoting"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4143,
              "nodeType": "StructuredDocumentation",
              "src": "1909:44:24",
              "text": "@notice Address for the Voting contract."
            },
            "functionSelector": "d2fa7170",
            "id": 4145,
            "mutability": "mutable",
            "name": "votingAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4549,
            "src": "1958:28:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4144,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1958:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4146,
              "nodeType": "StructuredDocumentation",
              "src": "1992:53:24",
              "text": "@notice Instance of the Foresight Vault contract."
            },
            "functionSelector": "1a973c84",
            "id": 4148,
            "mutability": "mutable",
            "name": "foresightVault",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4549,
            "src": "2050:36:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ForesightVault_$3373",
              "typeString": "contract ForesightVault"
            },
            "typeName": {
              "contractScope": null,
              "id": 4147,
              "name": "ForesightVault",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3373,
              "src": "2050:14:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ForesightVault_$3373",
                "typeString": "contract ForesightVault"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4240,
              "nodeType": "Block",
              "src": "3038:660:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4167,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3056:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 4168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3056:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4169,
                          "name": "setVotingEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4155,
                          "src": "3074:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3056:34:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "656e642074696d65206d757374206265206166746572207374617274",
                        "id": 4171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3092:30:24",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_235d4bdba4e480c310dca50d6650e8af0e1fef2907418ce4c5f75dbace193c77",
                          "typeString": "literal_string \"end time must be after start\""
                        },
                        "value": "end time must be after start"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_235d4bdba4e480c310dca50d6650e8af0e1fef2907418ce4c5f75dbace193c77",
                          "typeString": "literal_string \"end time must be after start\""
                        }
                      ],
                      "id": 4166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3048:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3048:75:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4173,
                  "nodeType": "ExpressionStatement",
                  "src": "3048:75:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4174,
                      "name": "marketTypeBinary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4115,
                      "src": "3133:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4175,
                      "name": "setMarketTypeBinary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4151,
                      "src": "3152:19:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3133:38:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4177,
                  "nodeType": "ExpressionStatement",
                  "src": "3133:38:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4178,
                      "name": "votingEndTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4139,
                      "src": "3181:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4179,
                      "name": "setVotingEndTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4155,
                      "src": "3197:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3181:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4181,
                  "nodeType": "ExpressionStatement",
                  "src": "3181:32:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4182,
                      "name": "question",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4118,
                      "src": "3223:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4183,
                      "name": "setQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4153,
                      "src": "3234:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3223:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4185,
                  "nodeType": "ExpressionStatement",
                  "src": "3223:22:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4186,
                      "name": "currencyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4106,
                      "src": "3255:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1181",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4188,
                          "name": "setCurrencyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4157,
                          "src": "3278:18:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4187,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1181,
                        "src": "3271:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1181_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 4189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3271:26:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1181",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3255:42:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1181",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 4191,
                  "nodeType": "ExpressionStatement",
                  "src": "3255:42:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4192,
                      "name": "currencyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4103,
                      "src": "3307:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4193,
                      "name": "setCurrencyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4157,
                      "src": "3325:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3307:36:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4195,
                  "nodeType": "ExpressionStatement",
                  "src": "3307:36:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4196,
                      "name": "visionToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4112,
                      "src": "3353:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1181",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4198,
                          "name": "setVisionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4159,
                          "src": "3374:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4197,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1181,
                        "src": "3367:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1181_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 4199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3367:24:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1181",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3353:38:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1181",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 4201,
                  "nodeType": "ExpressionStatement",
                  "src": "3353:38:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4202,
                      "name": "visionAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4109,
                      "src": "3401:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4203,
                      "name": "setVisionAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4159,
                      "src": "3417:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3401:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4205,
                  "nodeType": "ExpressionStatement",
                  "src": "3401:32:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4206,
                      "name": "rangeStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4133,
                      "src": "3443:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4207,
                      "name": "setRangeStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4161,
                      "src": "3456:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3443:26:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4209,
                  "nodeType": "ExpressionStatement",
                  "src": "3443:26:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4210,
                      "name": "rangeEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4136,
                      "src": "3479:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4211,
                      "name": "setRangeEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4163,
                      "src": "3490:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3479:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4213,
                  "nodeType": "ExpressionStatement",
                  "src": "3479:22:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4214,
                      "name": "foresightVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4148,
                      "src": "3511:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ForesightVault_$3373",
                        "typeString": "contract ForesightVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4219,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3555:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RealityMarket_$4549",
                                "typeString": "contract RealityMarket"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RealityMarket_$4549",
                                "typeString": "contract RealityMarket"
                              }
                            ],
                            "id": 4218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3547:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4217,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3547:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 4220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3547:13:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3528:18:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_ForesightVault_$3373_$",
                          "typeString": "function (address) returns (contract ForesightVault)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 4215,
                          "name": "ForesightVault",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3373,
                          "src": "3532:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ForesightVault_$3373",
                            "typeString": "contract ForesightVault"
                          }
                        }
                      },
                      "id": 4221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3528:33:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ForesightVault_$3373",
                        "typeString": "contract ForesightVault"
                      }
                    },
                    "src": "3511:50:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ForesightVault_$3373",
                      "typeString": "contract ForesightVault"
                    }
                  },
                  "id": 4223,
                  "nodeType": "ExpressionStatement",
                  "src": "3511:50:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4224,
                      "name": "voting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4142,
                      "src": "3571:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MarketVoting_$3875",
                        "typeString": "contract MarketVoting"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4227,
                          "name": "setMarketTypeBinary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4151,
                          "src": "3597:19:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4228,
                          "name": "setVotingEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4155,
                          "src": "3618:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4229,
                          "name": "visionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4109,
                          "src": "3636:13:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3580:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_bool_$_t_uint256_$_t_address_$returns$_t_contract$_MarketVoting_$3875_$",
                          "typeString": "function (bool,uint256,address) returns (contract MarketVoting)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 4225,
                          "name": "MarketVoting",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3875,
                          "src": "3584:12:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketVoting_$3875",
                            "typeString": "contract MarketVoting"
                          }
                        }
                      },
                      "id": 4230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3580:70:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MarketVoting_$3875",
                        "typeString": "contract MarketVoting"
                      }
                    },
                    "src": "3571:79:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MarketVoting_$3875",
                      "typeString": "contract MarketVoting"
                    }
                  },
                  "id": 4232,
                  "nodeType": "ExpressionStatement",
                  "src": "3571:79:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4233,
                      "name": "votingAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4145,
                      "src": "3660:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4236,
                          "name": "voting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4142,
                          "src": "3684:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketVoting_$3875",
                            "typeString": "contract MarketVoting"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MarketVoting_$3875",
                            "typeString": "contract MarketVoting"
                          }
                        ],
                        "id": 4235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3676:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4234,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3676:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 4237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3676:15:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3660:31:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4239,
                  "nodeType": "ExpressionStatement",
                  "src": "3660:31:24"
                }
              ]
            },
            "documentation": {
              "id": 4149,
              "nodeType": "StructuredDocumentation",
              "src": "2093:673:24",
              "text": "@notice Sets all base values for the market and sets up Voting and Token Vault.\n @param setMarketTypeBinary Signals if market is Binary or Scalar.\n @param setQuestion Determines market question.\n @param setVotingEndTime Sets the end of public voting on market outcomes.\n @param setCurrencyAddress Location of the currency used to mint Foresight.\n @param setVisionAddress Location of the Voting currency used to determine market reification.\n @param setRangeStart Least range endpoint. Necessary for reification of markets and UIs.\n @param setRangeEnd Maximum range endpoint. Necessary for reification of markets and UIs."
            },
            "id": 4241,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4151,
                  "mutability": "mutable",
                  "name": "setMarketTypeBinary",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4241,
                  "src": "2792:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4150,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2792:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4153,
                  "mutability": "mutable",
                  "name": "setQuestion",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4241,
                  "src": "2826:25:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4152,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2826:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4155,
                  "mutability": "mutable",
                  "name": "setVotingEndTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4241,
                  "src": "2861:21:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4154,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2861:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4157,
                  "mutability": "mutable",
                  "name": "setCurrencyAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4241,
                  "src": "2892:26:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2892:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4159,
                  "mutability": "mutable",
                  "name": "setVisionAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4241,
                  "src": "2928:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2928:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4161,
                  "mutability": "mutable",
                  "name": "setRangeStart",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4241,
                  "src": "2962:27:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4160,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2962:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4163,
                  "mutability": "mutable",
                  "name": "setRangeEnd",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4241,
                  "src": "2999:25:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4162,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2999:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2782:248:24"
            },
            "returnParameters": {
              "id": 4165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3038:0:24"
            },
            "scope": 4549,
            "src": "2771:927:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4267,
              "nodeType": "Block",
              "src": "3969:139:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4250,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4006:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4006:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4254,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4026:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RealityMarket_$4549",
                              "typeString": "contract RealityMarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RealityMarket_$4549",
                              "typeString": "contract RealityMarket"
                            }
                          ],
                          "id": 4253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4018:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4252,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4018:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4018:13:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4256,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4244,
                        "src": "4033:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4247,
                        "name": "currencyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4106,
                        "src": "3979:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1181",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1162,
                      "src": "3979:26:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3979:61:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4258,
                  "nodeType": "ExpressionStatement",
                  "src": "3979:61:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4262,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4082:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4082:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4264,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4244,
                        "src": "4094:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4259,
                        "name": "foresightVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "4050:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForesightVault_$3373",
                          "typeString": "contract ForesightVault"
                        }
                      },
                      "id": 4261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintCompleteSets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3318,
                      "src": "4050:31:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4050:51:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4266,
                  "nodeType": "ExpressionStatement",
                  "src": "4050:51:24"
                }
              ]
            },
            "documentation": {
              "id": 4242,
              "nodeType": "StructuredDocumentation",
              "src": "3704:214:24",
              "text": "@notice Create a complete set of tokens using the currencyToken 1 to 1 and store it.\n @dev Requires currency token approval.\n @param amount Amount of currency to take and number of shares to mint."
            },
            "functionSelector": "ebb01e65",
            "id": 4268,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintCompleteSets",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4244,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4268,
                  "src": "3949:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4243,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3949:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3948:13:24"
            },
            "returnParameters": {
              "id": 4246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3969:0:24"
            },
            "scope": 4549,
            "src": "3923:185:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4312,
              "nodeType": "Block",
              "src": "4338:246:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4279,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4376:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4376:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4281,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4271,
                        "src": "4388:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4276,
                        "name": "foresightVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "4348:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForesightVault_$3373",
                          "typeString": "contract ForesightVault"
                        }
                      },
                      "id": 4278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnYesShort",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3336,
                      "src": "4348:27:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4348:47:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4283,
                  "nodeType": "ExpressionStatement",
                  "src": "4348:47:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4287,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4431:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4431:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4289,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4271,
                        "src": "4443:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4284,
                        "name": "foresightVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "4405:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForesightVault_$3373",
                          "typeString": "contract ForesightVault"
                        }
                      },
                      "id": 4286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnNoLong",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3354,
                      "src": "4405:25:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4405:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4291,
                  "nodeType": "ExpressionStatement",
                  "src": "4405:45:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4295,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4487:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4487:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4297,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4271,
                        "src": "4499:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4292,
                        "name": "foresightVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "4460:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForesightVault_$3373",
                          "typeString": "contract ForesightVault"
                        }
                      },
                      "id": 4294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnInvalid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3372,
                      "src": "4460:26:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4460:46:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4299,
                  "nodeType": "ExpressionStatement",
                  "src": "4460:46:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4305,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4551:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RealityMarket_$4549",
                              "typeString": "contract RealityMarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RealityMarket_$4549",
                              "typeString": "contract RealityMarket"
                            }
                          ],
                          "id": 4304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4543:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4303,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4543:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4543:13:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4307,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4558:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4558:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4309,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4271,
                        "src": "4570:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4300,
                        "name": "currencyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4106,
                        "src": "4516:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1181",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1162,
                      "src": "4516:26:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4516:61:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4311,
                  "nodeType": "ExpressionStatement",
                  "src": "4516:61:24"
                }
              ]
            },
            "documentation": {
              "id": 4269,
              "nodeType": "StructuredDocumentation",
              "src": "4114:160:24",
              "text": "@notice Burns a complete set of Foresight tokens for the given amount and returns currency.\n @param amount Amount of Foresight of each token to burn."
            },
            "functionSelector": "f3a8a232",
            "id": 4313,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4274,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4273,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2723,
                  "src": "4325:12:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4325:12:24"
              }
            ],
            "name": "burnCompleteSets",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4271,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4313,
                  "src": "4305:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4270,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4305:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4304:13:24"
            },
            "returnParameters": {
              "id": 4275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4338:0:24"
            },
            "scope": 4549,
            "src": "4279:305:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4328,
              "nodeType": "Block",
              "src": "4798:45:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4324,
                        "name": "outcome",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4316,
                        "src": "4820:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4325,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4318,
                        "src": "4829:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4321,
                        "name": "voting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4142,
                        "src": "4808:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketVoting_$3875",
                          "typeString": "contract MarketVoting"
                        }
                      },
                      "id": 4323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3589,
                      "src": "4808:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_int256_$_t_uint256_$returns$__$",
                        "typeString": "function (int256,uint256) external"
                      }
                    },
                    "id": 4326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4808:28:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4327,
                  "nodeType": "ExpressionStatement",
                  "src": "4808:28:24"
                }
              ]
            },
            "documentation": {
              "id": 4314,
              "nodeType": "StructuredDocumentation",
              "src": "4590:156:24",
              "text": "@notice Passes vote to the voting construct.\n @param outcome Outcome to vote on.\n @param amount Amount of Vision token to stake on a vote."
            },
            "functionSelector": "3d402f7e",
            "id": 4329,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4316,
                  "mutability": "mutable",
                  "name": "outcome",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4329,
                  "src": "4765:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 4315,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "4765:3:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4318,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4329,
                  "src": "4778:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4317,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4778:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4764:26:24"
            },
            "returnParameters": {
              "id": 4320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4798:0:24"
            },
            "scope": 4549,
            "src": "4751:92:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4339,
              "nodeType": "Block",
              "src": "4944:47:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4335,
                        "name": "voting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4142,
                        "src": "4961:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketVoting_$3875",
                          "typeString": "contract MarketVoting"
                        }
                      },
                      "id": 4336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "winningOutcome",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3667,
                      "src": "4961:21:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_int256_$",
                        "typeString": "function () external returns (int256)"
                      }
                    },
                    "id": 4337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4961:23:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 4334,
                  "id": 4338,
                  "nodeType": "Return",
                  "src": "4954:30:24"
                }
              ]
            },
            "documentation": {
              "id": 4330,
              "nodeType": "StructuredDocumentation",
              "src": "4849:43:24",
              "text": "@notice returns voting winning outcome."
            },
            "functionSelector": "9b34ae03",
            "id": 4340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "winningOutcome",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4920:2:24"
            },
            "returnParameters": {
              "id": 4334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4333,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4340,
                  "src": "4939:3:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 4332,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "4939:3:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4938:5:24"
            },
            "scope": 4549,
            "src": "4897:94:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4352,
              "nodeType": "Block",
              "src": "5153:97:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4344,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5171:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 4345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5171:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4346,
                          "name": "votingEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4139,
                          "src": "5189:13:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5171:31:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "566f7465206973206e6f742079657420636f6d706c65746564",
                        "id": 4348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5204:27:24",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_702a6f0d860c1a29a5ff86c01de954646f32302da612b61137fc7f276267ac05",
                          "typeString": "literal_string \"Vote is not yet completed\""
                        },
                        "value": "Vote is not yet completed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_702a6f0d860c1a29a5ff86c01de954646f32302da612b61137fc7f276267ac05",
                          "typeString": "literal_string \"Vote is not yet completed\""
                        }
                      ],
                      "id": 4343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5163:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5163:69:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4350,
                  "nodeType": "ExpressionStatement",
                  "src": "5163:69:24"
                },
                {
                  "id": 4351,
                  "nodeType": "PlaceholderStatement",
                  "src": "5242:1:24"
                }
              ]
            },
            "documentation": {
              "id": 4341,
              "nodeType": "StructuredDocumentation",
              "src": "4997:120:24",
              "text": "@notice Asserts voting is completed.\n @dev Votes are completed when the timestamp is after the votingEndTime."
            },
            "id": 4353,
            "name": "assertVotingCompleted",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 4342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5153:0:24"
            },
            "src": "5122:128:24",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4438,
              "nodeType": "Block",
              "src": "5484:648:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4364,
                        "name": "marketTypeBinary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4115,
                        "src": "5502:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77726f6e67207061796f757420666f722062696e617279206d61726b6574",
                        "id": 4365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5520:32:24",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e58050f17f465c4cb375eecc1c4230383c2cb09b2f130a99dd7b629da8aae7c",
                          "typeString": "literal_string \"wrong payout for binary market\""
                        },
                        "value": "wrong payout for binary market"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e58050f17f465c4cb375eecc1c4230383c2cb09b2f130a99dd7b629da8aae7c",
                          "typeString": "literal_string \"wrong payout for binary market\""
                        }
                      ],
                      "id": 4363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5494:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5494:59:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4367,
                  "nodeType": "ExpressionStatement",
                  "src": "5494:59:24"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 4373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4368,
                          "name": "voting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4142,
                          "src": "5613:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketVoting_$3875",
                            "typeString": "contract MarketVoting"
                          }
                        },
                        "id": 4369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "winningOutcome",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3667,
                        "src": "5613:21:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_int256_$",
                          "typeString": "function () external returns (int256)"
                        }
                      },
                      "id": 4370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5613:23:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "-",
                      "prefix": true,
                      "src": "5640:5:24",
                      "subExpression": {
                        "argumentTypes": null,
                        "hexValue": "31653138",
                        "id": 4371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5641:4:24",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_minus_1000000000000000000_by_1",
                        "typeString": "int_const -1000000000000000000"
                      }
                    },
                    "src": "5613:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4391,
                  "nodeType": "IfStatement",
                  "src": "5609:163:24",
                  "trueBody": {
                    "id": 4390,
                    "nodeType": "Block",
                    "src": "5647:125:24",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4377,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5688:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5688:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4379,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4356,
                              "src": "5700:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4374,
                              "name": "foresightVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4148,
                              "src": "5661:14:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForesightVault_$3373",
                                "typeString": "contract ForesightVault"
                              }
                            },
                            "id": 4376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burnInvalid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3372,
                            "src": "5661:26:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 4380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5661:46:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4381,
                        "nodeType": "ExpressionStatement",
                        "src": "5661:46:24"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4385,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5744:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5744:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31653138",
                              "id": 4387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5756:4:24",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4382,
                              "name": "currencyToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4106,
                              "src": "5721:13:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1181",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1130,
                            "src": "5721:22:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 4388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5721:40:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4389,
                        "nodeType": "ExpressionStatement",
                        "src": "5721:40:24"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 4396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4392,
                          "name": "voting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4142,
                          "src": "5803:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketVoting_$3875",
                            "typeString": "contract MarketVoting"
                          }
                        },
                        "id": 4393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "winningOutcome",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3667,
                        "src": "5803:21:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_int256_$",
                          "typeString": "function () external returns (int256)"
                        }
                      },
                      "id": 4394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5803:23:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31653138",
                      "id": 4395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5830:4:24",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "5803:31:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4414,
                  "nodeType": "IfStatement",
                  "src": "5799:163:24",
                  "trueBody": {
                    "id": 4413,
                    "nodeType": "Block",
                    "src": "5836:126:24",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4400,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5878:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5878:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4402,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4356,
                              "src": "5890:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4397,
                              "name": "foresightVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4148,
                              "src": "5850:14:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForesightVault_$3373",
                                "typeString": "contract ForesightVault"
                              }
                            },
                            "id": 4399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burnYesShort",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3336,
                            "src": "5850:27:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 4403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5850:47:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4404,
                        "nodeType": "ExpressionStatement",
                        "src": "5850:47:24"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4408,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5934:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5934:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31653138",
                              "id": 4410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5946:4:24",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4405,
                              "name": "currencyToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4106,
                              "src": "5911:13:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1181",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1130,
                            "src": "5911:22:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 4411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5911:40:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4412,
                        "nodeType": "ExpressionStatement",
                        "src": "5911:40:24"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 4419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4415,
                          "name": "voting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4142,
                          "src": "5975:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketVoting_$3875",
                            "typeString": "contract MarketVoting"
                          }
                        },
                        "id": 4416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "winningOutcome",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3667,
                        "src": "5975:21:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_int256_$",
                          "typeString": "function () external returns (int256)"
                        }
                      },
                      "id": 4417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5975:23:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6002:1:24",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5975:28:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4437,
                  "nodeType": "IfStatement",
                  "src": "5971:155:24",
                  "trueBody": {
                    "id": 4436,
                    "nodeType": "Block",
                    "src": "6005:121:24",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4423,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6045:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6045:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4425,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4356,
                              "src": "6057:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4420,
                              "name": "foresightVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4148,
                              "src": "6019:14:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForesightVault_$3373",
                                "typeString": "contract ForesightVault"
                              }
                            },
                            "id": 4422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burnNoLong",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3354,
                            "src": "6019:25:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 4426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6019:45:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4427,
                        "nodeType": "ExpressionStatement",
                        "src": "6019:45:24"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4431,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6101:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6101:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6113:1:24",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4428,
                              "name": "currencyToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4106,
                              "src": "6078:13:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1181",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1130,
                            "src": "6078:22:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 4434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6078:37:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4435,
                        "nodeType": "ExpressionStatement",
                        "src": "6078:37:24"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4354,
              "nodeType": "StructuredDocumentation",
              "src": "5256:138:24",
              "text": "@notice Withdraws winning token currency based on voting outcomes for binary market.\n @param amount Amount of currency to swap."
            },
            "functionSelector": "0b8a5c46",
            "id": 4439,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4359,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4358,
                  "name": "assertVotingCompleted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4353,
                  "src": "5449:21:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5449:21:24"
              },
              {
                "arguments": null,
                "id": 4361,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4360,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2723,
                  "src": "5471:12:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5471:12:24"
              }
            ],
            "name": "withdrawPayoutBinary",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4356,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4439,
                  "src": "5429:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4355,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5429:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5428:13:24"
            },
            "returnParameters": {
              "id": 4362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5484:0:24"
            },
            "scope": 4549,
            "src": "5399:733:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4473,
              "nodeType": "Block",
              "src": "6358:179:24",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 4454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4449,
                          "name": "voting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4142,
                          "src": "6372:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketVoting_$3875",
                            "typeString": "contract MarketVoting"
                          }
                        },
                        "id": 4450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "winningOutcome",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3667,
                        "src": "6372:21:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_int256_$",
                          "typeString": "function () external returns (int256)"
                        }
                      },
                      "id": 4451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6372:23:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "-",
                      "prefix": true,
                      "src": "6399:5:24",
                      "subExpression": {
                        "argumentTypes": null,
                        "hexValue": "31653138",
                        "id": 4452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6400:4:24",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_minus_1000000000000000000_by_1",
                        "typeString": "int_const -1000000000000000000"
                      }
                    },
                    "src": "6372:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4472,
                  "nodeType": "IfStatement",
                  "src": "6368:163:24",
                  "trueBody": {
                    "id": 4471,
                    "nodeType": "Block",
                    "src": "6406:125:24",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4458,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6447:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6447:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4460,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4442,
                              "src": "6459:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4455,
                              "name": "foresightVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4148,
                              "src": "6420:14:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForesightVault_$3373",
                                "typeString": "contract ForesightVault"
                              }
                            },
                            "id": 4457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burnInvalid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3372,
                            "src": "6420:26:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 4461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6420:46:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4462,
                        "nodeType": "ExpressionStatement",
                        "src": "6420:46:24"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4466,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6503:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6503:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31653138",
                              "id": 4468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6515:4:24",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4463,
                              "name": "currencyToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4106,
                              "src": "6480:13:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1181",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1130,
                            "src": "6480:22:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 4469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6480:40:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4470,
                        "nodeType": "ExpressionStatement",
                        "src": "6480:40:24"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4440,
              "nodeType": "StructuredDocumentation",
              "src": "6138:123:24",
              "text": "@notice Computes the linear payout for Invalid tokens for the market.\n @param amount Amount of currency to swap."
            },
            "functionSelector": "dc106dc2",
            "id": 4474,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4445,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4444,
                  "name": "assertVotingCompleted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4353,
                  "src": "6323:21:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6323:21:24"
              },
              {
                "arguments": null,
                "id": 4447,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4446,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2723,
                  "src": "6345:12:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6345:12:24"
              }
            ],
            "name": "withdrawPayoutLinearInvalid",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4442,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4474,
                  "src": "6303:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4441,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6303:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6302:13:24"
            },
            "returnParameters": {
              "id": 4448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6358:0:24"
            },
            "scope": 4549,
            "src": "6266:271:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4511,
              "nodeType": "Block",
              "src": "6765:184:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4487,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6803:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6803:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4489,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4477,
                        "src": "6815:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4484,
                        "name": "foresightVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "6775:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForesightVault_$3373",
                          "typeString": "contract ForesightVault"
                        }
                      },
                      "id": 4486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnYesShort",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3336,
                      "src": "6775:27:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6775:47:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4491,
                  "nodeType": "ExpressionStatement",
                  "src": "6775:47:24"
                },
                {
                  "assignments": [
                    4493
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4493,
                      "mutability": "mutable",
                      "name": "res",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4511,
                      "src": "6832:8:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4492,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6832:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4500,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4496,
                            "name": "voting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4142,
                            "src": "6862:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketVoting_$3875",
                              "typeString": "contract MarketVoting"
                            }
                          },
                          "id": 4497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "winningOutcome",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3667,
                          "src": "6862:21:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_int256_$",
                            "typeString": "function () external returns (int256)"
                          }
                        },
                        "id": 4498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6862:23:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4494,
                        "name": "SafeCast",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3037,
                        "src": "6843:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeCast_$3037_$",
                          "typeString": "type(library SafeCast)"
                        }
                      },
                      "id": 4495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toUint256",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2863,
                      "src": "6843:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
                        "typeString": "function (int256) pure returns (uint256)"
                      }
                    },
                    "id": 4499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6843:43:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6832:54:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4504,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6919:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6919:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "31653138",
                          "id": 4506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6931:4:24",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4507,
                          "name": "res",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4493,
                          "src": "6938:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6931:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4501,
                        "name": "currencyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4106,
                        "src": "6896:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1181",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1130,
                      "src": "6896:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6896:46:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4510,
                  "nodeType": "ExpressionStatement",
                  "src": "6896:46:24"
                }
              ]
            },
            "documentation": {
              "id": 4475,
              "nodeType": "StructuredDocumentation",
              "src": "6543:124:24",
              "text": "@notice Computes the linear payout for YesShort tokens for the market.\n @param amount Amount of currency to swap."
            },
            "functionSelector": "160f3b61",
            "id": 4512,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4480,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4479,
                  "name": "assertVotingCompleted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4353,
                  "src": "6730:21:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6730:21:24"
              },
              {
                "arguments": null,
                "id": 4482,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4481,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2723,
                  "src": "6752:12:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6752:12:24"
              }
            ],
            "name": "withdrawPayoutLinearYesShort",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4477,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4512,
                  "src": "6710:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4476,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6710:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6709:13:24"
            },
            "returnParameters": {
              "id": 4483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6765:0:24"
            },
            "scope": 4549,
            "src": "6672:277:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4547,
              "nodeType": "Block",
              "src": "7173:175:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4525,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7209:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7209:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4527,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4515,
                        "src": "7221:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4522,
                        "name": "foresightVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "7183:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForesightVault_$3373",
                          "typeString": "contract ForesightVault"
                        }
                      },
                      "id": 4524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnNoLong",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3354,
                      "src": "7183:25:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7183:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4529,
                  "nodeType": "ExpressionStatement",
                  "src": "7183:45:24"
                },
                {
                  "assignments": [
                    4531
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4531,
                      "mutability": "mutable",
                      "name": "res",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4547,
                      "src": "7238:8:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4530,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7238:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4538,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4534,
                            "name": "voting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4142,
                            "src": "7268:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketVoting_$3875",
                              "typeString": "contract MarketVoting"
                            }
                          },
                          "id": 4535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "winningOutcome",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3667,
                          "src": "7268:21:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_int256_$",
                            "typeString": "function () external returns (int256)"
                          }
                        },
                        "id": 4536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7268:23:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4532,
                        "name": "SafeCast",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3037,
                        "src": "7249:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeCast_$3037_$",
                          "typeString": "type(library SafeCast)"
                        }
                      },
                      "id": 4533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toUint256",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2863,
                      "src": "7249:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
                        "typeString": "function (int256) pure returns (uint256)"
                      }
                    },
                    "id": 4537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7249:43:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7238:54:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4542,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7325:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7325:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4544,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4531,
                        "src": "7337:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4539,
                        "name": "currencyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4106,
                        "src": "7302:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1181",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1130,
                      "src": "7302:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7302:39:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4546,
                  "nodeType": "ExpressionStatement",
                  "src": "7302:39:24"
                }
              ]
            },
            "documentation": {
              "id": 4513,
              "nodeType": "StructuredDocumentation",
              "src": "6955:122:24",
              "text": "@notice Computes the linear payout for NoLong tokens for the market.\n @param amount Amount of currency to swap."
            },
            "functionSelector": "ac1e35ef",
            "id": 4548,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4518,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4517,
                  "name": "assertVotingCompleted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4353,
                  "src": "7138:21:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7138:21:24"
              },
              {
                "arguments": null,
                "id": 4520,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4519,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2723,
                  "src": "7160:12:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7160:12:24"
              }
            ],
            "name": "withdrawPayoutLinearNoLong",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4515,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4548,
                  "src": "7118:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4514,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7118:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7117:13:24"
            },
            "returnParameters": {
              "id": 4521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7173:0:24"
            },
            "scope": 4549,
            "src": "7082:266:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4550,
        "src": "511:6839:24"
      }
    ],
    "src": "39:7312:24"
  },
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100fc5760003560e01c80630b8a5c4614610101578063160f3b61146101205780631a973c841461013d5780631c1cb323146101615780631ea736e0146101695780632f13835d146101835780633d402f7e1461019f5780633fad9ae0146101c25780635c99ee011461023f5780636279cb27146102475780636b2fa3741461024f5780637920c127146102575780639b34ae031461025f578063ac1e35ef14610267578063d2fa717014610284578063dc106dc21461028c578063ebb01e65146102a9578063f2fd83e0146102c6578063f3a8a232146102ce578063fce1ccca146102eb575b600080fd5b61011e6004803603602081101561011757600080fd5b50356102f3565b005b61011e6004803603602081101561013657600080fd5b5035610854565b610145610a66565b604080516001600160a01b039092168252519081900360200190f35b610145610a75565b610171610a84565b60408051918252519081900360200190f35b61018b610a8a565b604080519115158252519081900360200190f35b61011e600480360360408110156101b557600080fd5b5080359060200135610a9a565b6101ca610b0a565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102045781810151838201526020016101ec565b50505050905090810190601f1680156102315780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ca610b98565b610145610bf3565b610145610c02565b6101ca610c11565b610171610c6c565b61011e6004803603602081101561027d57600080fd5b5035610ce3565b610145610e85565b61011e600480360360208110156102a257600080fd5b5035610e94565b61011e600480360360208110156102bf57600080fd5b5035611078565b61014561116c565b61011e600480360360208110156102e457600080fd5b503561117b565b61014561135d565b6008544211610337576040805162461bcd60e51b815260206004820152601960248201526000805160206113e8833981519152604482015290519081900360640190fd5b6002600054141561037d576040805162461bcd60e51b815260206004820152601f60248201526000805160206113c8833981519152604482015290519081900360640190fd5b6002600055600454600160a01b900460ff166103e0576040805162461bcd60e51b815260206004820152601e60248201527f77726f6e67207061796f757420666f722062696e617279206d61726b65740000604482015290519081900360640190fd5b600960009054906101000a90046001600160a01b03166001600160a01b0316639b34ae036040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561043057600080fd5b505af1158015610444573d6000803e3d6000fd5b505050506040513d602081101561045a57600080fd5b5051670de0b6b3a763ffff19141561055f57600b5460408051635084280d60e11b81523360048201526024810184905290516001600160a01b039092169163a108501a9160448082019260009290919082900301818387803b1580156104bf57600080fd5b505af11580156104d3573d6000803e3d6000fd5b50506002546040805163a9059cbb60e01b8152336004820152670de0b6b3a7640000602482015290516001600160a01b03909216935063a9059cbb92506044808201926020929091908290030181600087803b15801561053257600080fd5b505af1158015610546573d6000803e3d6000fd5b505050506040513d602081101561055c57600080fd5b50505b600960009054906101000a90046001600160a01b03166001600160a01b0316639b34ae036040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156105af57600080fd5b505af11580156105c3573d6000803e3d6000fd5b505050506040513d60208110156105d957600080fd5b5051670de0b6b3a764000014156106dd57600b54604080516323ed3bfd60e21b81523360048201526024810184905290516001600160a01b0390921691638fb4eff49160448082019260009290919082900301818387803b15801561063d57600080fd5b505af1158015610651573d6000803e3d6000fd5b50506002546040805163a9059cbb60e01b8152336004820152670de0b6b3a7640000602482015290516001600160a01b03909216935063a9059cbb92506044808201926020929091908290030181600087803b1580156106b057600080fd5b505af11580156106c4573d6000803e3d6000fd5b505050506040513d60208110156106da57600080fd5b50505b600960009054906101000a90046001600160a01b03166001600160a01b0316639b34ae036040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561072d57600080fd5b505af1158015610741573d6000803e3d6000fd5b505050506040513d602081101561075757600080fd5b505161084c57600b54604080516379a9568560e11b81523360048201526024810184905290516001600160a01b039092169163f352ad0a9160448082019260009290919082900301818387803b1580156107b057600080fd5b505af11580156107c4573d6000803e3d6000fd5b50506002546040805163a9059cbb60e01b815233600482015260006024820181905291516001600160a01b03909316945063a9059cbb9350604480820193602093909283900390910190829087803b15801561081f57600080fd5b505af1158015610833573d6000803e3d6000fd5b505050506040513d602081101561084957600080fd5b50505b506001600055565b6008544211610898576040805162461bcd60e51b815260206004820152601960248201526000805160206113e8833981519152604482015290519081900360640190fd5b600260005414156108de576040805162461bcd60e51b815260206004820152601f60248201526000805160206113c8833981519152604482015290519081900360640190fd5b60026000908155600b54604080516323ed3bfd60e21b81523360048201526024810185905290516001600160a01b0390921692638fb4eff49260448084019382900301818387803b15801561093257600080fd5b505af1158015610946573d6000803e3d6000fd5b5050505060006109d0600960009054906101000a90046001600160a01b03166001600160a01b0316639b34ae036040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561099f57600080fd5b505af11580156109b3573d6000803e3d6000fd5b505050506040513d60208110156109c957600080fd5b505161136c565b6002546040805163a9059cbb60e01b8152336004820152670de0b6b3a7640000849003602482015290519293506001600160a01b039091169163a9059cbb916044808201926020929091908290030181600087803b158015610a3157600080fd5b505af1158015610a45573d6000803e3d6000fd5b505050506040513d6020811015610a5b57600080fd5b505060016000555050565b600b546001600160a01b031681565b6001546001600160a01b031681565b60085481565b600454600160a01b900460ff1681565b60095460408051631ea017bf60e11b8152600481018590526024810184905290516001600160a01b0390921691633d402f7e9160448082019260009290919082900301818387803b158015610aee57600080fd5b505af1158015610b02573d6000803e3d6000fd5b505050505050565b6005805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610b905780601f10610b6557610100808354040283529160200191610b90565b820191906000526020600020905b815481529060010190602001808311610b7357829003601f168201915b505050505081565b6007805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610b905780601f10610b6557610100808354040283529160200191610b90565b6003546001600160a01b031681565b6002546001600160a01b031681565b6006805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610b905780601f10610b6557610100808354040283529160200191610b90565b60095460408051639b34ae0360e01b815290516000926001600160a01b031691639b34ae0391600480830192602092919082900301818787803b158015610cb257600080fd5b505af1158015610cc6573d6000803e3d6000fd5b505050506040513d6020811015610cdc57600080fd5b5051905090565b6008544211610d27576040805162461bcd60e51b815260206004820152601960248201526000805160206113e8833981519152604482015290519081900360640190fd5b60026000541415610d6d576040805162461bcd60e51b815260206004820152601f60248201526000805160206113c8833981519152604482015290519081900360640190fd5b60026000908155600b54604080516379a9568560e11b81523360048201526024810185905290516001600160a01b039092169263f352ad0a9260448084019382900301818387803b158015610dc157600080fd5b505af1158015610dd5573d6000803e3d6000fd5b505050506000610e2e600960009054906101000a90046001600160a01b03166001600160a01b0316639b34ae036040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561099f57600080fd5b6002546040805163a9059cbb60e01b81523360048201526024810184905290519293506001600160a01b039091169163a9059cbb916044808201926020929091908290030181600087803b158015610a3157600080fd5b600a546001600160a01b031681565b6008544211610ed8576040805162461bcd60e51b815260206004820152601960248201526000805160206113e8833981519152604482015290519081900360640190fd5b60026000541415610f1e576040805162461bcd60e51b815260206004820152601f60248201526000805160206113c8833981519152604482015290519081900360640190fd5b6002600081905550600960009054906101000a90046001600160a01b03166001600160a01b0316639b34ae036040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f7657600080fd5b505af1158015610f8a573d6000803e3d6000fd5b505050506040513d6020811015610fa057600080fd5b5051670de0b6b3a763ffff19141561084c57600b5460408051635084280d60e11b81523360048201526024810184905290516001600160a01b039092169163a108501a9160448082019260009290919082900301818387803b15801561100557600080fd5b505af1158015611019573d6000803e3d6000fd5b50506002546040805163a9059cbb60e01b8152336004820152670de0b6b3a7640000602482015290516001600160a01b03909216935063a9059cbb92506044808201926020929091908290030181600087803b15801561081f57600080fd5b600254604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b1580156110d257600080fd5b505af11580156110e6573d6000803e3d6000fd5b505050506040513d60208110156110fc57600080fd5b5050600b5460408051631e633a8560e31b81523360048201526024810184905290516001600160a01b039092169163f319d4289160448082019260009290919082900301818387803b15801561115157600080fd5b505af1158015611165573d6000803e3d6000fd5b5050505050565b6004546001600160a01b031681565b600260005414156111c1576040805162461bcd60e51b815260206004820152601f60248201526000805160206113c8833981519152604482015290519081900360640190fd5b60026000908155600b54604080516323ed3bfd60e21b81523360048201526024810185905290516001600160a01b0390921692638fb4eff49260448084019382900301818387803b15801561121557600080fd5b505af1158015611229573d6000803e3d6000fd5b5050600b54604080516379a9568560e11b81523360048201526024810186905290516001600160a01b03909216935063f352ad0a925060448082019260009290919082900301818387803b15801561128057600080fd5b505af1158015611294573d6000803e3d6000fd5b5050600b5460408051635084280d60e11b81523360048201526024810186905290516001600160a01b03909216935063a108501a925060448082019260009290919082900301818387803b1580156112eb57600080fd5b505af11580156112ff573d6000803e3d6000fd5b5050600254604080516323b872dd60e01b81523060048201523360248201526044810186905290516001600160a01b0390921693506323b872dd92506064808201926020929091908290030181600087803b15801561081f57600080fd5b6009546001600160a01b031681565b6000808212156113c3576040805162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f736974697665604482015290519081900360640190fd5b509056fe5265656e7472616e637947756172643a207265656e7472616e742063616c6c00566f7465206973206e6f742079657420636f6d706c6574656400000000000000a2646970667358221220b33c13dacc5d5192ce41884ad6e76856a8ba99421f93e52f589722585ea07ec364736f6c634300060c0033",
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang",
    "optimizer": {
      "enabled": true,
      "runs": 1
    },
    "evmVersion": "petersburg"
  }
}
