{
  "fileName": "RealityMarket.sol",
  "contractName": "RealityMarket",
  "source": "// SPDX-License-Identifier: Unlicense\n\npragma solidity 0.6.12;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/math/SignedSafeMath.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/SafeCast.sol\";\nimport \"./ForesightVault.sol\";\nimport \"./MarketVoting.sol\";\n\n/// @title RealityMarket\n/// @notice Generate a reality market and appropriate mint/burn tokens.\ncontract RealityMarket is ReentrancyGuard {\n    using SafeMath for uint;\n    using SignedSafeMath for int;\n    /// @notice Base currency token address used to mint Foresight.\n    address public currencyAddress;\n    /// @notice Base currency token used to mint Foresight.\n    IERC20 public currencyToken;\n    /// @notice Address for the Vision token.\n    address public visionAddress;\n    /// @notice Vision token Instance.\n    IERC20 public visionToken;\n    /// @notice Market Question.\n    string public question;\n    /// @dev Constant representing the YESSHORT option.\n    string private constant YESSHORT = \"YES\";\n    /// @dev Constant representing the NOLONG option.\n    string private constant NOLONG = \"NO\";\n    /// @dev Constant representing the INVALID option.\n    string private constant INVALID = \"INVALID\";\n    /// @notice Close of public voting on market outcomes.\n    uint public votingEndTime;\n    /// @notice State transition required to initialize a market.\n    uint public setup = 0;\n    /// @notice Instance of the voting contract.\n    MarketVoting public voting;\n    /// @notice Address for the Voting contract.\n    address public votingAddress;\n    /// @notice Instance of the Foresight Vault contract.\n    ForesightVault public foresightVault;\n    /// @notice Address of the Foresight Vault contract.\n    address public foresightVaultAddress;\n    /// @notice Market creation envent\n    event MintedTokensEvent(address from, uint amount);\n\n    /// @notice Sets all base values for the market and sets up Voting and Token Vault.\n    /// @param setQuestion Determines market question.\n    /// @param setVotingEndTime Sets the end of public voting on market outcomes.\n    /// @param setCurrencyAddress Location of the currency used to mint Foresight.\n    /// @param setVisionAddress Location of the Voting currency used to determine market reification.\n    /// @dev After called, user must call initializeVault then initializeVoting to complete market setup.\n    constructor(\n        string memory setQuestion,\n        uint setVotingEndTime,\n        address setCurrencyAddress,\n        address setVisionAddress\n    ) public {\n        require(block.timestamp < setVotingEndTime, \"end time must be after start\");\n        votingEndTime = setVotingEndTime;\n        question = setQuestion;\n        currencyToken = IERC20(setCurrencyAddress);\n        currencyAddress = setCurrencyAddress;\n        visionToken = IERC20(setVisionAddress);\n        visionAddress = setVisionAddress;\n        setup = 1;\n    }\n\n    /// @notice Creates Foresight Tokens\n    function initializeVault() public {\n        require(setup == 1, \"Market not in constructed state.\");\n        foresightVault = new ForesightVault(address(this));\n        foresightVaultAddress = address(foresightVault);\n        setup = 2;\n    }\n\n    /// @notice Creates Foresight Tokens and Market Voting\n    function initializeVoting() public {\n        require(setup == 2, \"Market not in foresight state.\");\n        voting = new MarketVoting(votingEndTime, visionAddress);\n        votingAddress = address(voting);\n        setup = 3;\n    }\n\n    /// @notice Create a complete set of tokens using the currencyToken 1 to 1 and store it.\n    /// @dev Requires currency token approval.\n    /// @param amount Amount of currency to take and number of shares to mint.\n    function mintCompleteSets(uint amount) public {\n        require(setup == 3, \"Market setup not complete\");\n        currencyToken.transferFrom(msg.sender, address(this), amount);\n        foresightVault.mintCompleteSets(msg.sender, amount);\n        emit MintedTokensEvent(msg.sender, amount);\n    }\n\n    /// @notice Burns a complete set of Foresight tokens for the given amount and returns currency.\n    /// @param amount Amount of Foresight of each token to burn.\n    function burnCompleteSets(uint amount) public nonReentrant {\n        foresightVault.burnYesShort(msg.sender, amount);\n        foresightVault.burnNoLong(msg.sender, amount);\n        foresightVault.burnInvalid(msg.sender, amount);\n        currencyToken.transferFrom(address(this), msg.sender, amount);\n    }\n\n    /// @notice returns voting winning outcome.\n    function winningOutcome() public returns (int) {\n        return voting.winningOutcome();\n    }\n\n    /// @notice Asserts voting is completed.\n    /// @dev Votes are completed when the timestamp is after the votingEndTime.\n    modifier assertVotingCompleted {\n        require(block.timestamp > votingEndTime, \"Vote is not yet completed\");\n        _;\n    }\n\n    /// @notice Withdraws winning token currency based on voting outcomes for binary market.\n    /// @param amount Amount of currency to swap.\n    function withdrawPayoutBinary(uint amount) public assertVotingCompleted nonReentrant {\n        // Case if voting was deemed invalid.\n        if (voting.winningOutcome() == -1) {\n            foresightVault.burnInvalid(msg.sender, amount);\n            currencyToken.transfer(msg.sender, 1e18);\n        }\n        //Case if\n        if (voting.winningOutcome() == 1) {\n            foresightVault.burnYesShort(msg.sender, amount);\n            currencyToken.transfer(msg.sender, 1e18);\n        }\n        if (voting.winningOutcome() == 0) {\n            foresightVault.burnNoLong(msg.sender, amount);\n            currencyToken.transfer(msg.sender, 0);\n        }\n    }\n\n}\n",
  "sourcePath": "contracts/RealityMarket.sol",
  "sourceMap": "502:5311:31:-:0;;;1500:1;1480:21;;2482:534;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2482:534:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2482:534:31;;;;;-1:-1:-1;;2482:534:31;;;;;;;;;;-1:-1:-1;2482:534:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2482:534:31;;;;;;;;;;;;;;;;;1628:1:17;1743:7;:22;2482:534:31;;-1:-1:-1;2482:534:31;;-1:-1:-1;2661:15:31;:34;-1:-1:-1;2653:75:31;;;;;-1:-1:-1;;;2653:75:31;;;;;;;;;;;;-1:-1:-1;;;2653:75:31;;;;;;;;;;;;;;;2738:13;:32;;;2780:22;;;;:8;;:22;;;;;:::i;:::-;-1:-1:-1;2812:13:31;:42;;-1:-1:-1;;;;;2812:42:31;;;-1:-1:-1;;;;;;2812:42:31;;;;;;;;-1:-1:-1;2864:36:31;;;;;;;;;2910:11;:38;;;;;;;;;;;;;;2958:13;:32;;;;;;;;;;;3000:5;:9;-1:-1:-1;502:5311:31;;-1:-1:-1;502:5311:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;502:5311:31;;;-1:-1:-1;502:5311:31;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "502:5311:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5152:658;;;;;;;;;;;;;;;;-1:-1:-1;5152:658:31;;:::i;:::-;;1828:36;;;:::i;:::-;;;;-1:-1:-1;;;;;1828:36:31;;;;;;;;;;;;;;1729;;;:::i;681:30::-;;;:::i;1383:25::-;;;:::i;:::-;;;;;;;;;;;;;;;;993:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;856:28;;;:::i;777:27::-;;;:::i;3370:230::-;;;:::i;4650:94::-;;;:::i;3063:242::-;;;:::i;1480:21::-;;;:::i;1637:28::-;;;:::i;3825:295::-;;;;;;;;;;;;;;;;-1:-1:-1;3825:295:31;;:::i;929:25::-;;;:::i;4291:305::-;;;;;;;;;;;;;;;;-1:-1:-1;4291:305:31;;:::i;1556:26::-;;;:::i;5152:658::-;4942:13;;4924:15;:31;4916:69;;;;;-1:-1:-1;;;4916:69:31;;;;;;;;;;;;-1:-1:-1;;;4916:69:31;;;;;;;;;;;;;;;1671:1:17::1;2260:7;;:19;;2252:63;;;::::0;;-1:-1:-1;;;2252:63:17;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;2252:63:17;;;;;;;;;;;;;::::1;;1671:1;2390:7;:18:::0;;;5297:6:31::2;::::0;:23:::2;::::0;;-1:-1:-1;;;5297:23:31;;;;-1:-1:-1;;;;;5297:6:31;;::::2;::::0;-1:-1:-1;;5297:23:31::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;;;:6;:23;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;5297:23:31;-1:-1:-1;;5297:29:31::2;5293:160;;;5342:14;::::0;:46:::2;::::0;;-1:-1:-1;;;5342:46:31;;5369:10:::2;5342:46;::::0;::::2;::::0;;;;;;;;;-1:-1:-1;;;;;5342:14:31;;::::2;::::0;:26:::2;::::0;:46;;;;;-1:-1:-1;;5342:46:31;;;;;;;;-1:-1:-1;5342:14:31;:46;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;5402:13:31::2;::::0;:40:::2;::::0;;-1:-1:-1;;;5402:40:31;;5425:10:::2;5402:40;::::0;::::2;::::0;5437:4:::2;5402:40:::0;;;;;;-1:-1:-1;;;;;5402:13:31;;::::2;::::0;-1:-1:-1;;;;5402:40:31;;;;;::::2;::::0;;;;;;;;;-1:-1:-1;5402:13:31;:40;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;;5293:160:31::2;5484:6;::::0;:23:::2;::::0;;-1:-1:-1;;;5484:23:31;;;;-1:-1:-1;;;;;5484:6:31;;::::2;::::0;-1:-1:-1;;5484:23:31::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;:6:::2;::::0;:23;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;5484:23:31;5511:1:::2;5484:28;5480:160;;;5528:14;::::0;:47:::2;::::0;;-1:-1:-1;;;5528:47:31;;5556:10:::2;5528:47;::::0;::::2;::::0;;;;;;;;;-1:-1:-1;;;;;5528:14:31;;::::2;::::0;:27:::2;::::0;:47;;;;;-1:-1:-1;;5528:47:31;;;;;;;;-1:-1:-1;5528:14:31;:47;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;5589:13:31::2;::::0;:40:::2;::::0;;-1:-1:-1;;;5589:40:31;;5612:10:::2;5589:40;::::0;::::2;::::0;5624:4:::2;5589:40:::0;;;;;;-1:-1:-1;;;;;5589:13:31;;::::2;::::0;-1:-1:-1;;;;5589:40:31;;;;;::::2;::::0;;;;;;;;;-1:-1:-1;5589:13:31;:40;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;;5480:160:31::2;5653:6;::::0;:23:::2;::::0;;-1:-1:-1;;;5653:23:31;;;;-1:-1:-1;;;;;5653:6:31;;::::2;::::0;-1:-1:-1;;5653:23:31::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;:6:::2;::::0;:23;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;5653:23:31;5649:155:::2;;5697:14;::::0;:45:::2;::::0;;-1:-1:-1;;;5697:45:31;;5723:10:::2;5697:45;::::0;::::2;::::0;;;;;;;;;-1:-1:-1;;;;;5697:14:31;;::::2;::::0;:25:::2;::::0;:45;;;;;-1:-1:-1;;5697:45:31;;;;;;;;-1:-1:-1;5697:14:31;:45;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;5756:13:31::2;::::0;:37:::2;::::0;;-1:-1:-1;;;5756:37:31;;5779:10:::2;5756:37;::::0;::::2;::::0;-1:-1:-1;5756:37:31;;;;;;;;-1:-1:-1;;;;;5756:13:31;;::::2;::::0;-1:-1:-1;;;;5756:37:31;;;;;::::2;::::0;;;;;;;;;;;;:13;:37;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;;5649:155:31::2;-1:-1:-1::0;1628:1:17::1;2563:7;:22:::0;5152:658:31:o;1828:36::-;;;-1:-1:-1;;;;;1828:36:31;;:::o;1729:::-;;;-1:-1:-1;;;;;1729:36:31;;:::o;681:30::-;;;-1:-1:-1;;;;;681:30:31;;:::o;1383:25::-;;;;:::o;993:22::-;;;;;;;;;;;;;;;-1:-1:-1;;993:22:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;856:28::-;;;-1:-1:-1;;;;;856:28:31;;:::o;777:27::-;;;-1:-1:-1;;;;;777:27:31;;:::o;3370:230::-;3423:5;;3432:1;3423:10;3415:53;;;;;-1:-1:-1;;;3415:53:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;3504:13;;3519;;3487:46;;-1:-1:-1;;;;;3519:13:31;;;;3487:46;;;:::i;:::-;;;;-1:-1:-1;;;;;3487:46:31;;;;;;;;;;;;;;-1:-1:-1;3487:46:31;;;;;;;;;;;;;;;-1:-1:-1;3478:6:31;:55;;-1:-1:-1;;;;;;3478:55:31;;;-1:-1:-1;;;;;3478:55:31;;;;;;;;3543:13;:31;;3567:6;;;;3543:31;;;;;3592:1;3584:5;:9;3370:230::o;4650:94::-;4714:6;;:23;;;-1:-1:-1;;;4714:23:31;;;;4692:3;;-1:-1:-1;;;;;4714:6:31;;-1:-1:-1;;4714:23:31;;;;;;;;;;;;;;4692:3;4714:6;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4714:23:31;;-1:-1:-1;4650:94:31;:::o;3063:242::-;3115:5;;3124:1;3115:10;3107:55;;;;;-1:-1:-1;;;3107:55:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3216:4;3189:33;;;;;:::i;:::-;-1:-1:-1;;;;;3189:33:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3172:14:31;:50;;-1:-1:-1;;;;;;3172:50:31;;;-1:-1:-1;;;;;3172:50:31;;;;;;;;3232:21;:47;;3264:14;;;;3232:47;;;;;3297:1;3289:5;:9;3063:242::o;1480:21::-;;;;:::o;1637:28::-;;;-1:-1:-1;;;;;1637:28:31;;:::o;3825:295::-;3889:5;;3898:1;3889:10;3881:48;;;;;-1:-1:-1;;;3881:48:31;;;;;;;;;;;;-1:-1:-1;;;3881:48:31;;;;;;;;;;;;;;;3939:13;;:61;;;-1:-1:-1;;;3939:61:31;;3966:10;3939:61;;;;3986:4;3939:61;;;;;;;;;;;;-1:-1:-1;;;;;3939:13:31;;;;-1:-1:-1;;3939:61:31;;;;;;;;;;;;;;;-1:-1:-1;3939:13:31;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4010:14:31;;:51;;;-1:-1:-1;;;4010:51:31;;4042:10;4010:51;;;;;;;;;;;;-1:-1:-1;;;;;4010:14:31;;;;:31;;:51;;;;;-1:-1:-1;;4010:51:31;;;;;;;;-1:-1:-1;4010:14:31;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4076:37:31;;;4094:10;4076:37;;;;;;;;;;;;-1:-1:-1;4076:37:31;;;;;;;;-1:-1:-1;4076:37:31;3825:295;:::o;929:25::-;;;-1:-1:-1;;;;;929:25:31;;:::o;4291:305::-;1671:1:17;2260:7;;:19;;2252:63;;;;;-1:-1:-1;;;2252:63:17;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2252:63:17;;;;;;;;;;;;;;;1671:1;2390:7;:18;;;4360:14:31::1;::::0;:47:::1;::::0;;-1:-1:-1;;;4360:47:31;;4388:10:::1;4360:47;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;;;;;4360:14:31;;::::1;::::0;:27:::1;::::0;:47;;;;;;;;;;2390:7:17;4360:14:31;:47;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4417:14:31::1;::::0;:45:::1;::::0;;-1:-1:-1;;;4417:45:31;;4443:10:::1;4417:45;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;;;;;4417:14:31;;::::1;::::0;-1:-1:-1;4417:25:31::1;::::0;-1:-1:-1;4417:45:31;;;;;-1:-1:-1;;4417:45:31;;;;;;;;-1:-1:-1;4417:14:31;:45;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4472:14:31::1;::::0;:46:::1;::::0;;-1:-1:-1;;;4472:46:31;;4499:10:::1;4472:46;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;;;;;4472:14:31;;::::1;::::0;-1:-1:-1;4472:26:31::1;::::0;-1:-1:-1;4472:46:31;;;;;-1:-1:-1;;4472:46:31;;;;;;;;-1:-1:-1;4472:14:31;:46;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4528:13:31::1;::::0;:61:::1;::::0;;-1:-1:-1;;;4528:61:31;;4563:4:::1;4528:61;::::0;::::1;::::0;4570:10:::1;4528:61:::0;;;;;;;;;;;;-1:-1:-1;;;;;4528:13:31;;::::1;::::0;-1:-1:-1;;;;4528:61:31;;;;;::::1;::::0;;;;;;;;;-1:-1:-1;4528:13:31;:61;::::1;;::::0;::::1;;;;::::0;::::1;1556:26:::0;;;-1:-1:-1;;;;;1556:26:31;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "setQuestion",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "setVotingEndTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "setCurrencyAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "setVisionAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MintedTokensEvent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnCompleteSets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currencyAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currencyToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "foresightVault",
      "outputs": [
        {
          "internalType": "contract ForesightVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "foresightVaultAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializeVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializeVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mintCompleteSets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "question",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setup",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "visionAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "visionToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voting",
      "outputs": [
        {
          "internalType": "contract MarketVoting",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingEndTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winningOutcome",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawPayoutBinary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "ast": {
    "absolutePath": "contracts/RealityMarket.sol",
    "exportedSymbols": {
      "RealityMarket": [
        6185
      ]
    },
    "id": 6186,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5808,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:31"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 5809,
        "nodeType": "ImportDirective",
        "scope": 6186,
        "sourceUnit": 1429,
        "src": "64:56:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 5810,
        "nodeType": "ImportDirective",
        "scope": 6186,
        "sourceUnit": 487,
        "src": "121:51:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SignedSafeMath.sol",
        "file": "@openzeppelin/contracts/math/SignedSafeMath.sol",
        "id": 5811,
        "nodeType": "ImportDirective",
        "scope": 6186,
        "sourceUnit": 666,
        "src": "173:57:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
        "id": 5812,
        "nodeType": "ImportDirective",
        "scope": 6186,
        "sourceUnit": 2972,
        "src": "231:59:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/SafeCast.sol",
        "file": "@openzeppelin/contracts/utils/SafeCast.sol",
        "id": 5813,
        "nodeType": "ImportDirective",
        "scope": 6186,
        "sourceUnit": 3285,
        "src": "291:52:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ForesightVault.sol",
        "file": "./ForesightVault.sol",
        "id": 5814,
        "nodeType": "ImportDirective",
        "scope": 6186,
        "sourceUnit": 5140,
        "src": "344:30:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/MarketVoting.sol",
        "file": "./MarketVoting.sol",
        "id": 5815,
        "nodeType": "ImportDirective",
        "scope": 6186,
        "sourceUnit": 5587,
        "src": "375:28:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5817,
              "name": "ReentrancyGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2971,
              "src": "528:15:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReentrancyGuard_$2971",
                "typeString": "contract ReentrancyGuard"
              }
            },
            "id": 5818,
            "nodeType": "InheritanceSpecifier",
            "src": "528:15:31"
          }
        ],
        "contractDependencies": [
          2971,
          5139,
          5586
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 5816,
          "nodeType": "StructuredDocumentation",
          "src": "405:97:31",
          "text": "@title RealityMarket\n @notice Generate a reality market and appropriate mint/burn tokens."
        },
        "fullyImplemented": true,
        "id": 6185,
        "linearizedBaseContracts": [
          6185,
          2971
        ],
        "name": "RealityMarket",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5821,
            "libraryName": {
              "contractScope": null,
              "id": 5819,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 486,
              "src": "556:8:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$486",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "550:24:31",
            "typeName": {
              "id": 5820,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "569:4:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 5824,
            "libraryName": {
              "contractScope": null,
              "id": 5822,
              "name": "SignedSafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 665,
              "src": "585:14:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SignedSafeMath_$665",
                "typeString": "library SignedSafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "579:29:31",
            "typeName": {
              "id": 5823,
              "name": "int",
              "nodeType": "ElementaryTypeName",
              "src": "604:3:31",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 5825,
              "nodeType": "StructuredDocumentation",
              "src": "613:63:31",
              "text": "@notice Base currency token address used to mint Foresight."
            },
            "functionSelector": "1c1cb323",
            "id": 5827,
            "mutability": "mutable",
            "name": "currencyAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6185,
            "src": "681:30:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5826,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "681:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 5828,
              "nodeType": "StructuredDocumentation",
              "src": "717:55:31",
              "text": "@notice Base currency token used to mint Foresight."
            },
            "functionSelector": "6b2fa374",
            "id": 5830,
            "mutability": "mutable",
            "name": "currencyToken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6185,
            "src": "777:27:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1428",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 5829,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1428,
              "src": "777:6:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1428",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 5831,
              "nodeType": "StructuredDocumentation",
              "src": "810:41:31",
              "text": "@notice Address for the Vision token."
            },
            "functionSelector": "6279cb27",
            "id": 5833,
            "mutability": "mutable",
            "name": "visionAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6185,
            "src": "856:28:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5832,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "856:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 5834,
              "nodeType": "StructuredDocumentation",
              "src": "890:34:31",
              "text": "@notice Vision token Instance."
            },
            "functionSelector": "f2fd83e0",
            "id": 5836,
            "mutability": "mutable",
            "name": "visionToken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6185,
            "src": "929:25:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1428",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 5835,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1428,
              "src": "929:6:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1428",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 5837,
              "nodeType": "StructuredDocumentation",
              "src": "960:28:31",
              "text": "@notice Market Question."
            },
            "functionSelector": "3fad9ae0",
            "id": 5839,
            "mutability": "mutable",
            "name": "question",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6185,
            "src": "993:22:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5838,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "993:6:31",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 5840,
              "nodeType": "StructuredDocumentation",
              "src": "1021:51:31",
              "text": "@dev Constant representing the YESSHORT option."
            },
            "id": 5843,
            "mutability": "constant",
            "name": "YESSHORT",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6185,
            "src": "1077:40:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 5841,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1077:6:31",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "594553",
              "id": 5842,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1112:5:31",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_5950ebe73a617667a66f67d525282c827c82ef4d89ae8dcd8336d013773b6b7f",
                "typeString": "literal_string \"YES\""
              },
              "value": "YES"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "documentation": {
              "id": 5844,
              "nodeType": "StructuredDocumentation",
              "src": "1123:49:31",
              "text": "@dev Constant representing the NOLONG option."
            },
            "id": 5847,
            "mutability": "constant",
            "name": "NOLONG",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6185,
            "src": "1177:37:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 5845,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1177:6:31",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4e4f",
              "id": 5846,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1210:4:31",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_1544e7eb480cc28803f7ff893bd999e62fb759c7d172fc27414594c5d9c925f2",
                "typeString": "literal_string \"NO\""
              },
              "value": "NO"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "documentation": {
              "id": 5848,
              "nodeType": "StructuredDocumentation",
              "src": "1220:50:31",
              "text": "@dev Constant representing the INVALID option."
            },
            "id": 5851,
            "mutability": "constant",
            "name": "INVALID",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6185,
            "src": "1275:43:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 5849,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1275:6:31",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "494e56414c4944",
              "id": 5850,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1309:9:31",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879",
                "typeString": "literal_string \"INVALID\""
              },
              "value": "INVALID"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 5852,
              "nodeType": "StructuredDocumentation",
              "src": "1324:54:31",
              "text": "@notice Close of public voting on market outcomes."
            },
            "functionSelector": "1ea736e0",
            "id": 5854,
            "mutability": "mutable",
            "name": "votingEndTime",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6185,
            "src": "1383:25:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5853,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1383:4:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 5855,
              "nodeType": "StructuredDocumentation",
              "src": "1414:61:31",
              "text": "@notice State transition required to initialize a market."
            },
            "functionSelector": "ba0bba40",
            "id": 5858,
            "mutability": "mutable",
            "name": "setup",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6185,
            "src": "1480:21:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5856,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1480:4:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 5857,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1500:1:31",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 5859,
              "nodeType": "StructuredDocumentation",
              "src": "1507:44:31",
              "text": "@notice Instance of the voting contract."
            },
            "functionSelector": "fce1ccca",
            "id": 5861,
            "mutability": "mutable",
            "name": "voting",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6185,
            "src": "1556:26:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MarketVoting_$5586",
              "typeString": "contract MarketVoting"
            },
            "typeName": {
              "contractScope": null,
              "id": 5860,
              "name": "MarketVoting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5586,
              "src": "1556:12:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketVoting_$5586",
                "typeString": "contract MarketVoting"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 5862,
              "nodeType": "StructuredDocumentation",
              "src": "1588:44:31",
              "text": "@notice Address for the Voting contract."
            },
            "functionSelector": "d2fa7170",
            "id": 5864,
            "mutability": "mutable",
            "name": "votingAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6185,
            "src": "1637:28:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5863,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1637:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 5865,
              "nodeType": "StructuredDocumentation",
              "src": "1671:53:31",
              "text": "@notice Instance of the Foresight Vault contract."
            },
            "functionSelector": "1a973c84",
            "id": 5867,
            "mutability": "mutable",
            "name": "foresightVault",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6185,
            "src": "1729:36:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ForesightVault_$5139",
              "typeString": "contract ForesightVault"
            },
            "typeName": {
              "contractScope": null,
              "id": 5866,
              "name": "ForesightVault",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5139,
              "src": "1729:14:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ForesightVault_$5139",
                "typeString": "contract ForesightVault"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 5868,
              "nodeType": "StructuredDocumentation",
              "src": "1771:52:31",
              "text": "@notice Address of the Foresight Vault contract."
            },
            "functionSelector": "1831db59",
            "id": 5870,
            "mutability": "mutable",
            "name": "foresightVaultAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 6185,
            "src": "1828:36:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5869,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1828:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 5871,
              "nodeType": "StructuredDocumentation",
              "src": "1870:34:31",
              "text": "@notice Market creation envent"
            },
            "id": 5877,
            "name": "MintedTokensEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5873,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5877,
                  "src": "1933:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5872,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1933:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5875,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5877,
                  "src": "1947:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5874,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1947:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1932:27:31"
            },
            "src": "1909:51:31"
          },
          {
            "body": {
              "id": 5929,
              "nodeType": "Block",
              "src": "2643:373:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5890,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2661:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 5891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2661:15:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 5892,
                          "name": "setVotingEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5882,
                          "src": "2679:16:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2661:34:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "656e642074696d65206d757374206265206166746572207374617274",
                        "id": 5894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2697:30:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_235d4bdba4e480c310dca50d6650e8af0e1fef2907418ce4c5f75dbace193c77",
                          "typeString": "literal_string \"end time must be after start\""
                        },
                        "value": "end time must be after start"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_235d4bdba4e480c310dca50d6650e8af0e1fef2907418ce4c5f75dbace193c77",
                          "typeString": "literal_string \"end time must be after start\""
                        }
                      ],
                      "id": 5889,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2653:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2653:75:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5896,
                  "nodeType": "ExpressionStatement",
                  "src": "2653:75:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5897,
                      "name": "votingEndTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5854,
                      "src": "2738:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5898,
                      "name": "setVotingEndTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5882,
                      "src": "2754:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2738:32:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5900,
                  "nodeType": "ExpressionStatement",
                  "src": "2738:32:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5901,
                      "name": "question",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5839,
                      "src": "2780:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5902,
                      "name": "setQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5880,
                      "src": "2791:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2780:22:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 5904,
                  "nodeType": "ExpressionStatement",
                  "src": "2780:22:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5905,
                      "name": "currencyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5830,
                      "src": "2812:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1428",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5907,
                          "name": "setCurrencyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5884,
                          "src": "2835:18:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5906,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1428,
                        "src": "2828:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1428_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 5908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2828:26:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1428",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2812:42:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1428",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 5910,
                  "nodeType": "ExpressionStatement",
                  "src": "2812:42:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5911,
                      "name": "currencyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5827,
                      "src": "2864:15:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5912,
                      "name": "setCurrencyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5884,
                      "src": "2882:18:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2864:36:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5914,
                  "nodeType": "ExpressionStatement",
                  "src": "2864:36:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5915,
                      "name": "visionToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5836,
                      "src": "2910:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1428",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5917,
                          "name": "setVisionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5886,
                          "src": "2931:16:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5916,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1428,
                        "src": "2924:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1428_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 5918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2924:24:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1428",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2910:38:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1428",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 5920,
                  "nodeType": "ExpressionStatement",
                  "src": "2910:38:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5921,
                      "name": "visionAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5833,
                      "src": "2958:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5922,
                      "name": "setVisionAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5886,
                      "src": "2974:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2958:32:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5924,
                  "nodeType": "ExpressionStatement",
                  "src": "2958:32:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5925,
                      "name": "setup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5858,
                      "src": "3000:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 5926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3008:1:31",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3000:9:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5928,
                  "nodeType": "ExpressionStatement",
                  "src": "3000:9:31"
                }
              ]
            },
            "documentation": {
              "id": 5878,
              "nodeType": "StructuredDocumentation",
              "src": "1966:511:31",
              "text": "@notice Sets all base values for the market and sets up Voting and Token Vault.\n @param setQuestion Determines market question.\n @param setVotingEndTime Sets the end of public voting on market outcomes.\n @param setCurrencyAddress Location of the currency used to mint Foresight.\n @param setVisionAddress Location of the Voting currency used to determine market reification.\n @dev After called, user must call initializeVault then initializeVoting to complete market setup."
            },
            "id": 5930,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5880,
                  "mutability": "mutable",
                  "name": "setQuestion",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5930,
                  "src": "2503:25:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5879,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2503:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5882,
                  "mutability": "mutable",
                  "name": "setVotingEndTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5930,
                  "src": "2538:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5881,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2538:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5884,
                  "mutability": "mutable",
                  "name": "setCurrencyAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5930,
                  "src": "2569:26:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2569:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5886,
                  "mutability": "mutable",
                  "name": "setVisionAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5930,
                  "src": "2605:24:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5885,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2605:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2493:142:31"
            },
            "returnParameters": {
              "id": 5888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2643:0:31"
            },
            "scope": 6185,
            "src": "2482:534:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5962,
              "nodeType": "Block",
              "src": "3097:208:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5935,
                          "name": "setup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5858,
                          "src": "3115:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 5936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3124:1:31",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3115:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61726b6574206e6f7420696e20636f6e73747275637465642073746174652e",
                        "id": 5938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3127:34:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0916017807ad112289ed5a2d4546c9ea2f950081feba09c96967375e67a8700",
                          "typeString": "literal_string \"Market not in constructed state.\""
                        },
                        "value": "Market not in constructed state."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0916017807ad112289ed5a2d4546c9ea2f950081feba09c96967375e67a8700",
                          "typeString": "literal_string \"Market not in constructed state.\""
                        }
                      ],
                      "id": 5934,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3107:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3107:55:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5940,
                  "nodeType": "ExpressionStatement",
                  "src": "3107:55:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5941,
                      "name": "foresightVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5867,
                      "src": "3172:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ForesightVault_$5139",
                        "typeString": "contract ForesightVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5946,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3216:4:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RealityMarket_$6185",
                                "typeString": "contract RealityMarket"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RealityMarket_$6185",
                                "typeString": "contract RealityMarket"
                              }
                            ],
                            "id": 5945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3208:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5944,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3208:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 5947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3208:13:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3189:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_ForesightVault_$5139_$",
                          "typeString": "function (address) returns (contract ForesightVault)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 5942,
                          "name": "ForesightVault",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 5139,
                          "src": "3193:14:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ForesightVault_$5139",
                            "typeString": "contract ForesightVault"
                          }
                        }
                      },
                      "id": 5948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3189:33:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ForesightVault_$5139",
                        "typeString": "contract ForesightVault"
                      }
                    },
                    "src": "3172:50:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ForesightVault_$5139",
                      "typeString": "contract ForesightVault"
                    }
                  },
                  "id": 5950,
                  "nodeType": "ExpressionStatement",
                  "src": "3172:50:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5951,
                      "name": "foresightVaultAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5870,
                      "src": "3232:21:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5954,
                          "name": "foresightVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5867,
                          "src": "3264:14:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ForesightVault_$5139",
                            "typeString": "contract ForesightVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ForesightVault_$5139",
                            "typeString": "contract ForesightVault"
                          }
                        ],
                        "id": 5953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3256:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 5952,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3256:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 5955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3256:23:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3232:47:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5957,
                  "nodeType": "ExpressionStatement",
                  "src": "3232:47:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5958,
                      "name": "setup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5858,
                      "src": "3289:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 5959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3297:1:31",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "3289:9:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5961,
                  "nodeType": "ExpressionStatement",
                  "src": "3289:9:31"
                }
              ]
            },
            "documentation": {
              "id": 5931,
              "nodeType": "StructuredDocumentation",
              "src": "3022:36:31",
              "text": "@notice Creates Foresight Tokens"
            },
            "functionSelector": "a85195b6",
            "id": 5963,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeVault",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3087:2:31"
            },
            "returnParameters": {
              "id": 5933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3097:0:31"
            },
            "scope": 6185,
            "src": "3063:242:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5993,
              "nodeType": "Block",
              "src": "3405:195:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5968,
                          "name": "setup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5858,
                          "src": "3423:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 5969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3432:1:31",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "3423:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61726b6574206e6f7420696e20666f726573696768742073746174652e",
                        "id": 5971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3435:32:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2fc9ec032ca81fe346fa545b4986cd2f3e4f19822802529e4f6d8a734ede7a10",
                          "typeString": "literal_string \"Market not in foresight state.\""
                        },
                        "value": "Market not in foresight state."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2fc9ec032ca81fe346fa545b4986cd2f3e4f19822802529e4f6d8a734ede7a10",
                          "typeString": "literal_string \"Market not in foresight state.\""
                        }
                      ],
                      "id": 5967,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3415:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3415:53:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5973,
                  "nodeType": "ExpressionStatement",
                  "src": "3415:53:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5974,
                      "name": "voting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5861,
                      "src": "3478:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MarketVoting_$5586",
                        "typeString": "contract MarketVoting"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5977,
                          "name": "votingEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5854,
                          "src": "3504:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 5978,
                          "name": "visionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5833,
                          "src": "3519:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3487:16:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_address_$returns$_t_contract$_MarketVoting_$5586_$",
                          "typeString": "function (uint256,address) returns (contract MarketVoting)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 5975,
                          "name": "MarketVoting",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 5586,
                          "src": "3491:12:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketVoting_$5586",
                            "typeString": "contract MarketVoting"
                          }
                        }
                      },
                      "id": 5979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3487:46:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MarketVoting_$5586",
                        "typeString": "contract MarketVoting"
                      }
                    },
                    "src": "3478:55:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MarketVoting_$5586",
                      "typeString": "contract MarketVoting"
                    }
                  },
                  "id": 5981,
                  "nodeType": "ExpressionStatement",
                  "src": "3478:55:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5982,
                      "name": "votingAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5864,
                      "src": "3543:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 5985,
                          "name": "voting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5861,
                          "src": "3567:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketVoting_$5586",
                            "typeString": "contract MarketVoting"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MarketVoting_$5586",
                            "typeString": "contract MarketVoting"
                          }
                        ],
                        "id": 5984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3559:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 5983,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3559:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 5986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3559:15:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3543:31:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5988,
                  "nodeType": "ExpressionStatement",
                  "src": "3543:31:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5989,
                      "name": "setup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5858,
                      "src": "3584:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 5990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3592:1:31",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "3584:9:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5992,
                  "nodeType": "ExpressionStatement",
                  "src": "3584:9:31"
                }
              ]
            },
            "documentation": {
              "id": 5964,
              "nodeType": "StructuredDocumentation",
              "src": "3311:54:31",
              "text": "@notice Creates Foresight Tokens and Market Voting"
            },
            "functionSelector": "6d04aae2",
            "id": 5994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeVoting",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3395:2:31"
            },
            "returnParameters": {
              "id": 5966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3405:0:31"
            },
            "scope": 6185,
            "src": "3370:230:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6033,
              "nodeType": "Block",
              "src": "3871:249:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6001,
                          "name": "setup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5858,
                          "src": "3889:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 6002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3898:1:31",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "3889:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61726b6574207365747570206e6f7420636f6d706c657465",
                        "id": 6004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3901:27:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_623024175515d711f509738f72f233ffb5870d3f6a5ee4dfc1d8556c36df868c",
                          "typeString": "literal_string \"Market setup not complete\""
                        },
                        "value": "Market setup not complete"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_623024175515d711f509738f72f233ffb5870d3f6a5ee4dfc1d8556c36df868c",
                          "typeString": "literal_string \"Market setup not complete\""
                        }
                      ],
                      "id": 6000,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3881:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3881:48:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6006,
                  "nodeType": "ExpressionStatement",
                  "src": "3881:48:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6010,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3966:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3966:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6014,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3986:4:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RealityMarket_$6185",
                              "typeString": "contract RealityMarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RealityMarket_$6185",
                              "typeString": "contract RealityMarket"
                            }
                          ],
                          "id": 6013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3978:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6012,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3978:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3978:13:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6016,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5997,
                        "src": "3993:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6007,
                        "name": "currencyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5830,
                        "src": "3939:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1428",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1409,
                      "src": "3939:26:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 6017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3939:61:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6018,
                  "nodeType": "ExpressionStatement",
                  "src": "3939:61:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6022,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4042:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4042:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6024,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5997,
                        "src": "4054:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6019,
                        "name": "foresightVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5867,
                        "src": "4010:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForesightVault_$5139",
                          "typeString": "contract ForesightVault"
                        }
                      },
                      "id": 6021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintCompleteSets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5084,
                      "src": "4010:31:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 6025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4010:51:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6026,
                  "nodeType": "ExpressionStatement",
                  "src": "4010:51:31"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6028,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4094:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4094:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6030,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5997,
                        "src": "4106:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6027,
                      "name": "MintedTokensEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5877,
                      "src": "4076:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4076:37:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6032,
                  "nodeType": "EmitStatement",
                  "src": "4071:42:31"
                }
              ]
            },
            "documentation": {
              "id": 5995,
              "nodeType": "StructuredDocumentation",
              "src": "3606:214:31",
              "text": "@notice Create a complete set of tokens using the currencyToken 1 to 1 and store it.\n @dev Requires currency token approval.\n @param amount Amount of currency to take and number of shares to mint."
            },
            "functionSelector": "ebb01e65",
            "id": 6034,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintCompleteSets",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5997,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6034,
                  "src": "3851:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5996,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3851:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3850:13:31"
            },
            "returnParameters": {
              "id": 5999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3871:0:31"
            },
            "scope": 6185,
            "src": "3825:295:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6078,
              "nodeType": "Block",
              "src": "4350:246:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6045,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4388:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4388:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6047,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6037,
                        "src": "4400:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6042,
                        "name": "foresightVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5867,
                        "src": "4360:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForesightVault_$5139",
                          "typeString": "contract ForesightVault"
                        }
                      },
                      "id": 6044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnYesShort",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5102,
                      "src": "4360:27:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 6048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4360:47:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6049,
                  "nodeType": "ExpressionStatement",
                  "src": "4360:47:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6053,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4443:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4443:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6055,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6037,
                        "src": "4455:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6050,
                        "name": "foresightVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5867,
                        "src": "4417:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForesightVault_$5139",
                          "typeString": "contract ForesightVault"
                        }
                      },
                      "id": 6052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnNoLong",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5120,
                      "src": "4417:25:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 6056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4417:45:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6057,
                  "nodeType": "ExpressionStatement",
                  "src": "4417:45:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6061,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4499:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4499:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6063,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6037,
                        "src": "4511:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6058,
                        "name": "foresightVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5867,
                        "src": "4472:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForesightVault_$5139",
                          "typeString": "contract ForesightVault"
                        }
                      },
                      "id": 6060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnInvalid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5138,
                      "src": "4472:26:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 6064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4472:46:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6065,
                  "nodeType": "ExpressionStatement",
                  "src": "4472:46:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 6071,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4563:4:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RealityMarket_$6185",
                              "typeString": "contract RealityMarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RealityMarket_$6185",
                              "typeString": "contract RealityMarket"
                            }
                          ],
                          "id": 6070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4555:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6069,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4555:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4555:13:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6073,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4570:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4570:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6075,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6037,
                        "src": "4582:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6066,
                        "name": "currencyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5830,
                        "src": "4528:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1428",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1409,
                      "src": "4528:26:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 6076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4528:61:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6077,
                  "nodeType": "ExpressionStatement",
                  "src": "4528:61:31"
                }
              ]
            },
            "documentation": {
              "id": 6035,
              "nodeType": "StructuredDocumentation",
              "src": "4126:160:31",
              "text": "@notice Burns a complete set of Foresight tokens for the given amount and returns currency.\n @param amount Amount of Foresight of each token to burn."
            },
            "functionSelector": "f3a8a232",
            "id": 6079,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 6040,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6039,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2970,
                  "src": "4337:12:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4337:12:31"
              }
            ],
            "name": "burnCompleteSets",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6037,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6079,
                  "src": "4317:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6036,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4317:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4316:13:31"
            },
            "returnParameters": {
              "id": 6041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4350:0:31"
            },
            "scope": 6185,
            "src": "4291:305:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6089,
              "nodeType": "Block",
              "src": "4697:47:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 6085,
                        "name": "voting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5861,
                        "src": "4714:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketVoting_$5586",
                          "typeString": "contract MarketVoting"
                        }
                      },
                      "id": 6086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "winningOutcome",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5433,
                      "src": "4714:21:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_int256_$",
                        "typeString": "function () external returns (int256)"
                      }
                    },
                    "id": 6087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4714:23:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 6084,
                  "id": 6088,
                  "nodeType": "Return",
                  "src": "4707:30:31"
                }
              ]
            },
            "documentation": {
              "id": 6080,
              "nodeType": "StructuredDocumentation",
              "src": "4602:43:31",
              "text": "@notice returns voting winning outcome."
            },
            "functionSelector": "9b34ae03",
            "id": 6090,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "winningOutcome",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4673:2:31"
            },
            "returnParameters": {
              "id": 6084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6083,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6090,
                  "src": "4692:3:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 6082,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "4692:3:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4691:5:31"
            },
            "scope": 6185,
            "src": "4650:94:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6102,
              "nodeType": "Block",
              "src": "4906:97:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6094,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4924:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 6095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4924:15:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 6096,
                          "name": "votingEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5854,
                          "src": "4942:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4924:31:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "566f7465206973206e6f742079657420636f6d706c65746564",
                        "id": 6098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4957:27:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_702a6f0d860c1a29a5ff86c01de954646f32302da612b61137fc7f276267ac05",
                          "typeString": "literal_string \"Vote is not yet completed\""
                        },
                        "value": "Vote is not yet completed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_702a6f0d860c1a29a5ff86c01de954646f32302da612b61137fc7f276267ac05",
                          "typeString": "literal_string \"Vote is not yet completed\""
                        }
                      ],
                      "id": 6093,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4916:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4916:69:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6100,
                  "nodeType": "ExpressionStatement",
                  "src": "4916:69:31"
                },
                {
                  "id": 6101,
                  "nodeType": "PlaceholderStatement",
                  "src": "4995:1:31"
                }
              ]
            },
            "documentation": {
              "id": 6091,
              "nodeType": "StructuredDocumentation",
              "src": "4750:120:31",
              "text": "@notice Asserts voting is completed.\n @dev Votes are completed when the timestamp is after the votingEndTime."
            },
            "id": 6103,
            "name": "assertVotingCompleted",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 6092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4906:0:31"
            },
            "src": "4875:128:31",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6183,
              "nodeType": "Block",
              "src": "5237:573:31",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 6118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 6113,
                          "name": "voting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5861,
                          "src": "5297:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketVoting_$5586",
                            "typeString": "contract MarketVoting"
                          }
                        },
                        "id": 6114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "winningOutcome",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5433,
                        "src": "5297:21:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_int256_$",
                          "typeString": "function () external returns (int256)"
                        }
                      },
                      "id": 6115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5297:23:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 6117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "-",
                      "prefix": true,
                      "src": "5324:2:31",
                      "subExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 6116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5325:1:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_minus_1_by_1",
                        "typeString": "int_const -1"
                      }
                    },
                    "src": "5297:29:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 6136,
                  "nodeType": "IfStatement",
                  "src": "5293:160:31",
                  "trueBody": {
                    "id": 6135,
                    "nodeType": "Block",
                    "src": "5328:125:31",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 6122,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5369:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5369:10:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 6124,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6106,
                              "src": "5381:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 6119,
                              "name": "foresightVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5867,
                              "src": "5342:14:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForesightVault_$5139",
                                "typeString": "contract ForesightVault"
                              }
                            },
                            "id": 6121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burnInvalid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5138,
                            "src": "5342:26:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 6125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5342:46:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6126,
                        "nodeType": "ExpressionStatement",
                        "src": "5342:46:31"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 6130,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5425:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5425:10:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31653138",
                              "id": 6132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5437:4:31",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 6127,
                              "name": "currencyToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5830,
                              "src": "5402:13:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1428",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 6129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1377,
                            "src": "5402:22:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 6133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5402:40:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 6134,
                        "nodeType": "ExpressionStatement",
                        "src": "5402:40:31"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 6141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 6137,
                          "name": "voting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5861,
                          "src": "5484:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketVoting_$5586",
                            "typeString": "contract MarketVoting"
                          }
                        },
                        "id": 6138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "winningOutcome",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5433,
                        "src": "5484:21:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_int256_$",
                          "typeString": "function () external returns (int256)"
                        }
                      },
                      "id": 6139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5484:23:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 6140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5511:1:31",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5484:28:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 6159,
                  "nodeType": "IfStatement",
                  "src": "5480:160:31",
                  "trueBody": {
                    "id": 6158,
                    "nodeType": "Block",
                    "src": "5514:126:31",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 6145,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5556:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5556:10:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 6147,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6106,
                              "src": "5568:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 6142,
                              "name": "foresightVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5867,
                              "src": "5528:14:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForesightVault_$5139",
                                "typeString": "contract ForesightVault"
                              }
                            },
                            "id": 6144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burnYesShort",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5102,
                            "src": "5528:27:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 6148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5528:47:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6149,
                        "nodeType": "ExpressionStatement",
                        "src": "5528:47:31"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 6153,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5612:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5612:10:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31653138",
                              "id": 6155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5624:4:31",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 6150,
                              "name": "currencyToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5830,
                              "src": "5589:13:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1428",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 6152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1377,
                            "src": "5589:22:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 6156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5589:40:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 6157,
                        "nodeType": "ExpressionStatement",
                        "src": "5589:40:31"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 6164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 6160,
                          "name": "voting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5861,
                          "src": "5653:6:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketVoting_$5586",
                            "typeString": "contract MarketVoting"
                          }
                        },
                        "id": 6161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "winningOutcome",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5433,
                        "src": "5653:21:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_int256_$",
                          "typeString": "function () external returns (int256)"
                        }
                      },
                      "id": 6162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5653:23:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 6163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5680:1:31",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5653:28:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 6182,
                  "nodeType": "IfStatement",
                  "src": "5649:155:31",
                  "trueBody": {
                    "id": 6181,
                    "nodeType": "Block",
                    "src": "5683:121:31",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 6168,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5723:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6169,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5723:10:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 6170,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6106,
                              "src": "5735:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 6165,
                              "name": "foresightVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5867,
                              "src": "5697:14:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForesightVault_$5139",
                                "typeString": "contract ForesightVault"
                              }
                            },
                            "id": 6167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burnNoLong",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5120,
                            "src": "5697:25:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 6171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5697:45:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6172,
                        "nodeType": "ExpressionStatement",
                        "src": "5697:45:31"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 6176,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5779:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 6177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5779:10:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 6178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5791:1:31",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 6173,
                              "name": "currencyToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5830,
                              "src": "5756:13:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1428",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 6175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1377,
                            "src": "5756:22:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 6179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5756:37:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 6180,
                        "nodeType": "ExpressionStatement",
                        "src": "5756:37:31"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 6104,
              "nodeType": "StructuredDocumentation",
              "src": "5009:138:31",
              "text": "@notice Withdraws winning token currency based on voting outcomes for binary market.\n @param amount Amount of currency to swap."
            },
            "functionSelector": "0b8a5c46",
            "id": 6184,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 6109,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6108,
                  "name": "assertVotingCompleted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6103,
                  "src": "5202:21:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5202:21:31"
              },
              {
                "arguments": null,
                "id": 6111,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6110,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2970,
                  "src": "5224:12:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5224:12:31"
              }
            ],
            "name": "withdrawPayoutBinary",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6106,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6184,
                  "src": "5182:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6105,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5182:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5181:13:31"
            },
            "returnParameters": {
              "id": 6112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5237:0:31"
            },
            "scope": 6185,
            "src": "5152:658:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6186,
        "src": "502:5311:31"
      }
    ],
    "src": "39:5775:31"
  },
  "bytecode": "",
  "deployedBytecode": "",
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang",
    "optimizer": {
      "enabled": true,
      "runs": 1
    },
    "evmVersion": "petersburg"
  }
}
