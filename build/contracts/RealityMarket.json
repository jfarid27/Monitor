{
  "fileName": "RealityMarket.sol",
  "contractName": "RealityMarket",
  "source": "// SPDX-License-Identifier: Unlicense\n\npragma solidity 0.6.12;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/math/SignedSafeMath.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/SafeCast.sol\";\nimport \"./ForesightVault.sol\";\nimport \"./MarketVoting.sol\";\n\n/// @title RealityMarket\n/// @notice Generate a reality market and appropriate mint/burn tokens.\ncontract RealityMarket is ReentrancyGuard {\n    using SafeMath for uint;\n    using SignedSafeMath for int;\n    /// @notice Base currency token address used to mint Foresight.\n    address public currencyAddress;\n    /// @notice Base currency token used to mint Foresight.\n    IERC20 public currencyToken;\n    /// @notice Address for the Vision token.\n    address public visionAddress;\n    /// @notice Vision token Instance.\n    IERC20 public visionToken;\n    /// @notice Market Question.\n    string public question;\n    /// @dev Constant representing the YESSHORT option.\n    string private constant YESSHORT = \"YES\";\n    /// @dev Constant representing the NOLONG option.\n    string private constant NOLONG = \"NO\";\n    /// @dev Constant representing the INVALID option.\n    string private constant INVALID = \"INVALID\";\n\n    /// @notice Close of public voting on market outcomes.\n    uint public votingEndTime;\n\n    /// @notice State transition required to initialize a market.\n    uint public setup = 0;\n\n    /// @notice Instance of the voting contract.\n    MarketVoting public voting;\n    /// @notice Address for the Voting contract.\n    address public votingAddress;\n    /// @notice Instance of the Foresight Vault contract.\n    ForesightVault public foresightVault;\n\n    /// @notice Sets all base values for the market and sets up Voting and Token Vault.\n    /// @param setQuestion Determines market question.\n    /// @param setVotingEndTime Sets the end of public voting on market outcomes.\n    /// @param setCurrencyAddress Location of the currency used to mint Foresight.\n    /// @param setVisionAddress Location of the Voting currency used to determine market reification.\n    /// @dev After called, user must call initializeVault then initializeVoting to complete market setup.\n    constructor(\n        string memory setQuestion,\n        uint setVotingEndTime,\n        address setCurrencyAddress,\n        address setVisionAddress\n    ) public {\n        require(block.timestamp < setVotingEndTime, \"end time must be after start\");\n        votingEndTime = setVotingEndTime;\n        question = setQuestion;\n        currencyToken = IERC20(setCurrencyAddress);\n        currencyAddress = setCurrencyAddress;\n        visionToken = IERC20(setVisionAddress);\n        visionAddress = setVisionAddress;\n        setup = 1;\n    }\n\n    /// @notice Creates Foresight Tokens\n    function initializeVault() public {\n        require(setup == 1, 'Market not in constructed state.');\n        foresightVault = new ForesightVault(address(this));\n        setup = 2;\n    }\n\n    /// @notice Creates Foresight Tokens and Market Voting\n    function initializeVoting() public {\n        require(setup == 2, 'Market not in foresight state.');\n        voting = new MarketVoting(votingEndTime, visionAddress);\n        votingAddress = address(voting);\n        setup = 3;\n    }\n\n    /// @notice Create a complete set of tokens using the currencyToken 1 to 1 and store it.\n    /// @dev Requires currency token approval.\n    /// @param amount Amount of currency to take and number of shares to mint.\n    function mintCompleteSets(uint amount) public {\n        require(setup == 3, 'Market setup not complete');\n        currencyToken.transferFrom(msg.sender, address(this), amount);\n        foresightVault.mintCompleteSets(msg.sender, amount);\n    }\n\n    /// @notice Burns a complete set of Foresight tokens for the given amount and returns currency.\n    /// @param amount Amount of Foresight of each token to burn.\n    function burnCompleteSets(uint amount) public nonReentrant {\n        foresightVault.burnYesShort(msg.sender, amount);\n        foresightVault.burnNoLong(msg.sender, amount);\n        foresightVault.burnInvalid(msg.sender, amount);\n        currencyToken.transferFrom(address(this), msg.sender, amount);\n    }\n\n    /// @notice Passes vote to the voting construct.\n    /// @param outcome Outcome to vote on.\n    /// @param amount Amount of Vision token to stake on a vote.\n    function vote(int outcome, uint amount) public {\n        voting.vote(outcome, amount);\n    }\n\n    /// @notice returns voting winning outcome.\n    function winningOutcome() public returns (int) {\n        return voting.winningOutcome();\n    }\n\n    /// @notice Asserts voting is completed.\n    /// @dev Votes are completed when the timestamp is after the votingEndTime.\n    modifier assertVotingCompleted {\n        require(block.timestamp > votingEndTime, \"Vote is not yet completed\");\n        _;\n    }\n\n    /// @notice Withdraws winning token currency based on voting outcomes for binary market.\n    /// @param amount Amount of currency to swap.\n    function withdrawPayoutBinary(uint amount) public assertVotingCompleted nonReentrant {\n        // Case if voting was deemed invalid.\n        if (voting.winningOutcome() == -1e18) {\n            foresightVault.burnInvalid(msg.sender, amount);\n            currencyToken.transfer(msg.sender, 1e18);\n        }\n        //Case if\n        if (voting.winningOutcome() == 1e18) {\n            foresightVault.burnYesShort(msg.sender, amount);\n            currencyToken.transfer(msg.sender, 1e18);\n        }\n        if (voting.winningOutcome() == 0) {\n            foresightVault.burnNoLong(msg.sender, amount);\n            currencyToken.transfer(msg.sender, 0);\n        }\n    }\n\n}\n",
  "sourcePath": "contracts/RealityMarket.sol",
  "sourceMap": "502:5276:24:-:0;;;1502:1;1482:21;;2291:534;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2291:534:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2291:534:24;;;;;-1:-1:-1;;2291:534:24;;;;;;;;;;-1:-1:-1;2291:534:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2291:534:24;;;;;;;;;;;;;;;;;1628:1:12;1743:7;:22;2291:534:24;;-1:-1:-1;2291:534:24;;-1:-1:-1;2470:15:24;:34;-1:-1:-1;2462:75:24;;;;;-1:-1:-1;;;2462:75:24;;;;;;;;;;;;-1:-1:-1;;;2462:75:24;;;;;;;;;;;;;;;2547:13;:32;;;2589:22;;;;:8;;:22;;;;;:::i;:::-;-1:-1:-1;2621:13:24;:42;;-1:-1:-1;;;;;2621:42:24;;;-1:-1:-1;;;;;;2621:42:24;;;;;;;;-1:-1:-1;2673:36:24;;;;;;;;;2719:11;:38;;;;;;;;;;;;;;2767:13;:32;;;;;;;;;;;2809:5;:9;-1:-1:-1;502:5276:24;;-1:-1:-1;502:5276:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;502:5276:24;;;-1:-1:-1;502:5276:24;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "502:5276:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5111:664;;;;;;;;;;;;;;;;-1:-1:-1;5111:664:24;;:::i;:::-;;1732:36;;;:::i;:::-;;;;-1:-1:-1;;;;;1732:36:24;;;;;;;;;;;;;;681:30;;;:::i;1384:25::-;;;:::i;:::-;;;;;;;;;;;;;;;;4463:92;;;;;;;;;;;;;;;;-1:-1:-1;4463:92:24;;;;;;;:::i;993:22::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;856:28;;;:::i;777:27::-;;;:::i;3122:230::-;;;:::i;4609:94::-;;;:::i;2872:185::-;;;:::i;1482:21::-;;;:::i;1640:28::-;;;:::i;3577:243::-;;;;;;;;;;;;;;;;-1:-1:-1;3577:243:24;;:::i;929:25::-;;;:::i;3991:305::-;;;;;;;;;;;;;;;;-1:-1:-1;3991:305:24;;:::i;1559:26::-;;;:::i;5111:664::-;4901:13;;4883:15;:31;4875:69;;;;;-1:-1:-1;;;4875:69:24;;;;;;;;;;;;-1:-1:-1;;;4875:69:24;;;;;;;;;;;;;;;1671:1:12::1;2260:7;;:19;;2252:63;;;::::0;;-1:-1:-1;;;2252:63:12;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;2252:63:12;;;;;;;;;;;;;::::1;;1671:1;2390:7;:18:::0;;;5256:6:24::2;::::0;:23:::2;::::0;;-1:-1:-1;;;5256:23:24;;;;-1:-1:-1;;;;;5256:6:24;;::::2;::::0;-1:-1:-1;;5256:23:24::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;;;:6;:23;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;5256:23:24;-1:-1:-1;;5256:32:24::2;5252:163;;;5304:14;::::0;:46:::2;::::0;;-1:-1:-1;;;5304:46:24;;5331:10:::2;5304:46;::::0;::::2;::::0;;;;;;;;;-1:-1:-1;;;;;5304:14:24;;::::2;::::0;:26:::2;::::0;:46;;;;;-1:-1:-1;;5304:46:24;;;;;;;;-1:-1:-1;5304:14:24;:46;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;5364:13:24::2;::::0;:40:::2;::::0;;-1:-1:-1;;;5364:40:24;;5387:10:::2;5364:40;::::0;::::2;::::0;5399:4:::2;5364:40:::0;;;;;;-1:-1:-1;;;;;5364:13:24;;::::2;::::0;-1:-1:-1;;;;5364:40:24;;;;;::::2;::::0;;;;;;;;;-1:-1:-1;5364:13:24;:40;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;;5252:163:24::2;5446:6;::::0;:23:::2;::::0;;-1:-1:-1;;;5446:23:24;;;;-1:-1:-1;;;;;5446:6:24;;::::2;::::0;-1:-1:-1;;5446:23:24::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;:6:::2;::::0;:23;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;5446:23:24;5473:4:::2;5446:31;5442:163;;;5493:14;::::0;:47:::2;::::0;;-1:-1:-1;;;5493:47:24;;5521:10:::2;5493:47;::::0;::::2;::::0;;;;;;;;;-1:-1:-1;;;;;5493:14:24;;::::2;::::0;:27:::2;::::0;:47;;;;;-1:-1:-1;;5493:47:24;;;;;;;;-1:-1:-1;5493:14:24;:47;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;5554:13:24::2;::::0;:40:::2;::::0;;-1:-1:-1;;;5554:40:24;;5577:10:::2;5554:40;::::0;::::2;::::0;5589:4:::2;5554:40:::0;;;;;;-1:-1:-1;;;;;5554:13:24;;::::2;::::0;-1:-1:-1;;;;5554:40:24;;;;;::::2;::::0;;;;;;;;;-1:-1:-1;5554:13:24;:40;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;;5442:163:24::2;5618:6;::::0;:23:::2;::::0;;-1:-1:-1;;;5618:23:24;;;;-1:-1:-1;;;;;5618:6:24;;::::2;::::0;-1:-1:-1;;5618:23:24::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;:6:::2;::::0;:23;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;5618:23:24;5614:155:::2;;5662:14;::::0;:45:::2;::::0;;-1:-1:-1;;;5662:45:24;;5688:10:::2;5662:45;::::0;::::2;::::0;;;;;;;;;-1:-1:-1;;;;;5662:14:24;;::::2;::::0;:25:::2;::::0;:45;;;;;-1:-1:-1;;5662:45:24;;;;;;;;-1:-1:-1;5662:14:24;:45;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;5721:13:24::2;::::0;:37:::2;::::0;;-1:-1:-1;;;5721:37:24;;5744:10:::2;5721:37;::::0;::::2;::::0;-1:-1:-1;5721:37:24;;;;;;;;-1:-1:-1;;;;;5721:13:24;;::::2;::::0;-1:-1:-1;;;;5721:37:24;;;;;::::2;::::0;;;;;;;;;;;;:13;:37;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;;5614:155:24::2;-1:-1:-1::0;1628:1:12::1;2563:7;:22:::0;5111:664:24:o;1732:36::-;;;-1:-1:-1;;;;;1732:36:24;;:::o;681:30::-;;;-1:-1:-1;;;;;681:30:24;;:::o;1384:25::-;;;;:::o;4463:92::-;4520:6;;:28;;;-1:-1:-1;;;4520:28:24;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4520:6:24;;;;:11;;:28;;;;;-1:-1:-1;;4520:28:24;;;;;;;;-1:-1:-1;4520:6:24;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4463:92;;:::o;993:22::-;;;;;;;;;;;;;;;-1:-1:-1;;993:22:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;856:28::-;;;-1:-1:-1;;;;;856:28:24;;:::o;777:27::-;;;-1:-1:-1;;;;;777:27:24;;:::o;3122:230::-;3175:5;;3184:1;3175:10;3167:53;;;;;-1:-1:-1;;;3167:53:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;3256:13;;3271;;3239:46;;-1:-1:-1;;;;;3271:13:24;;;;3239:46;;;:::i;:::-;;;;-1:-1:-1;;;;;3239:46:24;;;;;;;;;;;;;;-1:-1:-1;3239:46:24;;;;;;;;;;;;;;;-1:-1:-1;3230:6:24;:55;;-1:-1:-1;;;;;;3230:55:24;;;-1:-1:-1;;;;;3230:55:24;;;;;;;;3295:13;:31;;3319:6;;;;3295:31;;;;;3344:1;3336:5;:9;3122:230::o;4609:94::-;4673:6;;:23;;;-1:-1:-1;;;4673:23:24;;;;4651:3;;-1:-1:-1;;;;;4673:6:24;;-1:-1:-1;;4673:23:24;;;;;;;;;;;;;;4651:3;4673:6;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4673:23:24;;-1:-1:-1;4609:94:24;:::o;2872:185::-;2924:5;;2933:1;2924:10;2916:55;;;;;-1:-1:-1;;;2916:55:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3025:4;2998:33;;;;;:::i;:::-;-1:-1:-1;;;;;2998:33:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2981:14:24;:50;;-1:-1:-1;;;;;;2981:50:24;-1:-1:-1;;;;;2981:50:24;;;;;;;;;;3049:1;3041:5;:9;2872:185::o;1482:21::-;;;;:::o;1640:28::-;;;-1:-1:-1;;;;;1640:28:24;;:::o;3577:243::-;3641:5;;3650:1;3641:10;3633:48;;;;;-1:-1:-1;;;3633:48:24;;;;;;;;;;;;-1:-1:-1;;;3633:48:24;;;;;;;;;;;;;;;3691:13;;:61;;;-1:-1:-1;;;3691:61:24;;3718:10;3691:61;;;;3738:4;3691:61;;;;;;;;;;;;-1:-1:-1;;;;;3691:13:24;;;;-1:-1:-1;;3691:61:24;;;;;;;;;;;;;;;-1:-1:-1;3691:13:24;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3762:14:24;;:51;;;-1:-1:-1;;;3762:51:24;;3794:10;3762:51;;;;;;;;;;;;-1:-1:-1;;;;;3762:14:24;;;;:31;;:51;;;;;-1:-1:-1;;3762:51:24;;;;;;;;-1:-1:-1;3762:14:24;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3577:243;:::o;929:25::-;;;-1:-1:-1;;;;;929:25:24;;:::o;3991:305::-;1671:1:12;2260:7;;:19;;2252:63;;;;;-1:-1:-1;;;2252:63:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2252:63:12;;;;;;;;;;;;;;;1671:1;2390:7;:18;;;4060:14:24::1;::::0;:47:::1;::::0;;-1:-1:-1;;;4060:47:24;;4088:10:::1;4060:47;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;;;;;4060:14:24;;::::1;::::0;:27:::1;::::0;:47;;;;;;;;;;2390:7:12;4060:14:24;:47;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4117:14:24::1;::::0;:45:::1;::::0;;-1:-1:-1;;;4117:45:24;;4143:10:::1;4117:45;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;;;;;4117:14:24;;::::1;::::0;-1:-1:-1;4117:25:24::1;::::0;-1:-1:-1;4117:45:24;;;;;-1:-1:-1;;4117:45:24;;;;;;;;-1:-1:-1;4117:14:24;:45;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4172:14:24::1;::::0;:46:::1;::::0;;-1:-1:-1;;;4172:46:24;;4199:10:::1;4172:46;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;;;;;4172:14:24;;::::1;::::0;-1:-1:-1;4172:26:24::1;::::0;-1:-1:-1;4172:46:24;;;;;-1:-1:-1;;4172:46:24;;;;;;;;-1:-1:-1;4172:14:24;:46;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4228:13:24::1;::::0;:61:::1;::::0;;-1:-1:-1;;;4228:61:24;;4263:4:::1;4228:61;::::0;::::1;::::0;4270:10:::1;4228:61:::0;;;;;;;;;;;;-1:-1:-1;;;;;4228:13:24;;::::1;::::0;-1:-1:-1;;;;4228:61:24;;;;;::::1;::::0;;;;;;;;;-1:-1:-1;4228:13:24;:61;::::1;;::::0;::::1;;;;::::0;::::1;1559:26:::0;;;-1:-1:-1;;;;;1559:26:24;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "setQuestion",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "setVotingEndTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "setCurrencyAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "setVisionAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnCompleteSets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currencyAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currencyToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "foresightVault",
      "outputs": [
        {
          "internalType": "contract ForesightVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializeVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializeVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mintCompleteSets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "question",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setup",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "visionAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "visionToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "outcome",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voting",
      "outputs": [
        {
          "internalType": "contract MarketVoting",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingEndTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winningOutcome",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawPayoutBinary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "ast": {
    "absolutePath": "contracts/RealityMarket.sol",
    "exportedSymbols": {
      "RealityMarket": [
        4388
      ]
    },
    "id": 4389,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4018,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:24"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 4019,
        "nodeType": "ImportDirective",
        "scope": 4389,
        "sourceUnit": 1182,
        "src": "64:56:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 4020,
        "nodeType": "ImportDirective",
        "scope": 4389,
        "sourceUnit": 418,
        "src": "121:51:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SignedSafeMath.sol",
        "file": "@openzeppelin/contracts/math/SignedSafeMath.sol",
        "id": 4021,
        "nodeType": "ImportDirective",
        "scope": 4389,
        "sourceUnit": 597,
        "src": "173:57:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
        "id": 4022,
        "nodeType": "ImportDirective",
        "scope": 4389,
        "sourceUnit": 2725,
        "src": "231:59:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/SafeCast.sol",
        "file": "@openzeppelin/contracts/utils/SafeCast.sol",
        "id": 4023,
        "nodeType": "ImportDirective",
        "scope": 4389,
        "sourceUnit": 3038,
        "src": "291:52:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ForesightVault.sol",
        "file": "./ForesightVault.sol",
        "id": 4024,
        "nodeType": "ImportDirective",
        "scope": 4389,
        "sourceUnit": 3374,
        "src": "344:30:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/MarketVoting.sol",
        "file": "./MarketVoting.sol",
        "id": 4025,
        "nodeType": "ImportDirective",
        "scope": 4389,
        "sourceUnit": 3802,
        "src": "375:28:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4027,
              "name": "ReentrancyGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2724,
              "src": "528:15:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReentrancyGuard_$2724",
                "typeString": "contract ReentrancyGuard"
              }
            },
            "id": 4028,
            "nodeType": "InheritanceSpecifier",
            "src": "528:15:24"
          }
        ],
        "contractDependencies": [
          2724,
          3373,
          3801
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 4026,
          "nodeType": "StructuredDocumentation",
          "src": "405:97:24",
          "text": "@title RealityMarket\n @notice Generate a reality market and appropriate mint/burn tokens."
        },
        "fullyImplemented": true,
        "id": 4388,
        "linearizedBaseContracts": [
          4388,
          2724
        ],
        "name": "RealityMarket",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4031,
            "libraryName": {
              "contractScope": null,
              "id": 4029,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 417,
              "src": "556:8:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$417",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "550:24:24",
            "typeName": {
              "id": 4030,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "569:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 4034,
            "libraryName": {
              "contractScope": null,
              "id": 4032,
              "name": "SignedSafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 596,
              "src": "585:14:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SignedSafeMath_$596",
                "typeString": "library SignedSafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "579:29:24",
            "typeName": {
              "id": 4033,
              "name": "int",
              "nodeType": "ElementaryTypeName",
              "src": "604:3:24",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 4035,
              "nodeType": "StructuredDocumentation",
              "src": "613:63:24",
              "text": "@notice Base currency token address used to mint Foresight."
            },
            "functionSelector": "1c1cb323",
            "id": 4037,
            "mutability": "mutable",
            "name": "currencyAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4388,
            "src": "681:30:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4036,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "681:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4038,
              "nodeType": "StructuredDocumentation",
              "src": "717:55:24",
              "text": "@notice Base currency token used to mint Foresight."
            },
            "functionSelector": "6b2fa374",
            "id": 4040,
            "mutability": "mutable",
            "name": "currencyToken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4388,
            "src": "777:27:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1181",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 4039,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1181,
              "src": "777:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1181",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4041,
              "nodeType": "StructuredDocumentation",
              "src": "810:41:24",
              "text": "@notice Address for the Vision token."
            },
            "functionSelector": "6279cb27",
            "id": 4043,
            "mutability": "mutable",
            "name": "visionAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4388,
            "src": "856:28:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4042,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "856:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4044,
              "nodeType": "StructuredDocumentation",
              "src": "890:34:24",
              "text": "@notice Vision token Instance."
            },
            "functionSelector": "f2fd83e0",
            "id": 4046,
            "mutability": "mutable",
            "name": "visionToken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4388,
            "src": "929:25:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1181",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 4045,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1181,
              "src": "929:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1181",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4047,
              "nodeType": "StructuredDocumentation",
              "src": "960:28:24",
              "text": "@notice Market Question."
            },
            "functionSelector": "3fad9ae0",
            "id": 4049,
            "mutability": "mutable",
            "name": "question",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4388,
            "src": "993:22:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4048,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "993:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 4050,
              "nodeType": "StructuredDocumentation",
              "src": "1021:51:24",
              "text": "@dev Constant representing the YESSHORT option."
            },
            "id": 4053,
            "mutability": "constant",
            "name": "YESSHORT",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4388,
            "src": "1077:40:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 4051,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1077:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "594553",
              "id": 4052,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1112:5:24",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_5950ebe73a617667a66f67d525282c827c82ef4d89ae8dcd8336d013773b6b7f",
                "typeString": "literal_string \"YES\""
              },
              "value": "YES"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "documentation": {
              "id": 4054,
              "nodeType": "StructuredDocumentation",
              "src": "1123:49:24",
              "text": "@dev Constant representing the NOLONG option."
            },
            "id": 4057,
            "mutability": "constant",
            "name": "NOLONG",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4388,
            "src": "1177:37:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 4055,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1177:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4e4f",
              "id": 4056,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1210:4:24",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_1544e7eb480cc28803f7ff893bd999e62fb759c7d172fc27414594c5d9c925f2",
                "typeString": "literal_string \"NO\""
              },
              "value": "NO"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "documentation": {
              "id": 4058,
              "nodeType": "StructuredDocumentation",
              "src": "1220:50:24",
              "text": "@dev Constant representing the INVALID option."
            },
            "id": 4061,
            "mutability": "constant",
            "name": "INVALID",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4388,
            "src": "1275:43:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 4059,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1275:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "494e56414c4944",
              "id": 4060,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1309:9:24",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879",
                "typeString": "literal_string \"INVALID\""
              },
              "value": "INVALID"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4062,
              "nodeType": "StructuredDocumentation",
              "src": "1325:54:24",
              "text": "@notice Close of public voting on market outcomes."
            },
            "functionSelector": "1ea736e0",
            "id": 4064,
            "mutability": "mutable",
            "name": "votingEndTime",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4388,
            "src": "1384:25:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4063,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1384:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4065,
              "nodeType": "StructuredDocumentation",
              "src": "1416:61:24",
              "text": "@notice State transition required to initialize a market."
            },
            "functionSelector": "ba0bba40",
            "id": 4068,
            "mutability": "mutable",
            "name": "setup",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4388,
            "src": "1482:21:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4066,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1482:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 4067,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1502:1:24",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4069,
              "nodeType": "StructuredDocumentation",
              "src": "1510:44:24",
              "text": "@notice Instance of the voting contract."
            },
            "functionSelector": "fce1ccca",
            "id": 4071,
            "mutability": "mutable",
            "name": "voting",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4388,
            "src": "1559:26:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MarketVoting_$3801",
              "typeString": "contract MarketVoting"
            },
            "typeName": {
              "contractScope": null,
              "id": 4070,
              "name": "MarketVoting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3801,
              "src": "1559:12:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketVoting_$3801",
                "typeString": "contract MarketVoting"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4072,
              "nodeType": "StructuredDocumentation",
              "src": "1591:44:24",
              "text": "@notice Address for the Voting contract."
            },
            "functionSelector": "d2fa7170",
            "id": 4074,
            "mutability": "mutable",
            "name": "votingAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4388,
            "src": "1640:28:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4073,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1640:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4075,
              "nodeType": "StructuredDocumentation",
              "src": "1674:53:24",
              "text": "@notice Instance of the Foresight Vault contract."
            },
            "functionSelector": "1a973c84",
            "id": 4077,
            "mutability": "mutable",
            "name": "foresightVault",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4388,
            "src": "1732:36:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ForesightVault_$3373",
              "typeString": "contract ForesightVault"
            },
            "typeName": {
              "contractScope": null,
              "id": 4076,
              "name": "ForesightVault",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3373,
              "src": "1732:14:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ForesightVault_$3373",
                "typeString": "contract ForesightVault"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4129,
              "nodeType": "Block",
              "src": "2452:373:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4090,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2470:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 4091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2470:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4092,
                          "name": "setVotingEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4082,
                          "src": "2488:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2470:34:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "656e642074696d65206d757374206265206166746572207374617274",
                        "id": 4094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2506:30:24",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_235d4bdba4e480c310dca50d6650e8af0e1fef2907418ce4c5f75dbace193c77",
                          "typeString": "literal_string \"end time must be after start\""
                        },
                        "value": "end time must be after start"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_235d4bdba4e480c310dca50d6650e8af0e1fef2907418ce4c5f75dbace193c77",
                          "typeString": "literal_string \"end time must be after start\""
                        }
                      ],
                      "id": 4089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2462:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2462:75:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4096,
                  "nodeType": "ExpressionStatement",
                  "src": "2462:75:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4097,
                      "name": "votingEndTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4064,
                      "src": "2547:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4098,
                      "name": "setVotingEndTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4082,
                      "src": "2563:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2547:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4100,
                  "nodeType": "ExpressionStatement",
                  "src": "2547:32:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4101,
                      "name": "question",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4049,
                      "src": "2589:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4102,
                      "name": "setQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4080,
                      "src": "2600:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2589:22:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4104,
                  "nodeType": "ExpressionStatement",
                  "src": "2589:22:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4105,
                      "name": "currencyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4040,
                      "src": "2621:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1181",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4107,
                          "name": "setCurrencyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4084,
                          "src": "2644:18:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4106,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1181,
                        "src": "2637:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1181_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 4108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2637:26:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1181",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2621:42:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1181",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 4110,
                  "nodeType": "ExpressionStatement",
                  "src": "2621:42:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4111,
                      "name": "currencyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4037,
                      "src": "2673:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4112,
                      "name": "setCurrencyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4084,
                      "src": "2691:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2673:36:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4114,
                  "nodeType": "ExpressionStatement",
                  "src": "2673:36:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4115,
                      "name": "visionToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4046,
                      "src": "2719:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1181",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4117,
                          "name": "setVisionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4086,
                          "src": "2740:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4116,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1181,
                        "src": "2733:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1181_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 4118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2733:24:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1181",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2719:38:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1181",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 4120,
                  "nodeType": "ExpressionStatement",
                  "src": "2719:38:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4121,
                      "name": "visionAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4043,
                      "src": "2767:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4122,
                      "name": "setVisionAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4086,
                      "src": "2783:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2767:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4124,
                  "nodeType": "ExpressionStatement",
                  "src": "2767:32:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4125,
                      "name": "setup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4068,
                      "src": "2809:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 4126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2817:1:24",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2809:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4128,
                  "nodeType": "ExpressionStatement",
                  "src": "2809:9:24"
                }
              ]
            },
            "documentation": {
              "id": 4078,
              "nodeType": "StructuredDocumentation",
              "src": "1775:511:24",
              "text": "@notice Sets all base values for the market and sets up Voting and Token Vault.\n @param setQuestion Determines market question.\n @param setVotingEndTime Sets the end of public voting on market outcomes.\n @param setCurrencyAddress Location of the currency used to mint Foresight.\n @param setVisionAddress Location of the Voting currency used to determine market reification.\n @dev After called, user must call initializeVault then initializeVoting to complete market setup."
            },
            "id": 4130,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4080,
                  "mutability": "mutable",
                  "name": "setQuestion",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4130,
                  "src": "2312:25:24",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4079,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2312:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4082,
                  "mutability": "mutable",
                  "name": "setVotingEndTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4130,
                  "src": "2347:21:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4081,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2347:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4084,
                  "mutability": "mutable",
                  "name": "setCurrencyAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4130,
                  "src": "2378:26:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2378:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4086,
                  "mutability": "mutable",
                  "name": "setVisionAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4130,
                  "src": "2414:24:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2414:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2302:142:24"
            },
            "returnParameters": {
              "id": 4088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2452:0:24"
            },
            "scope": 4388,
            "src": "2291:534:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4155,
              "nodeType": "Block",
              "src": "2906:151:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4135,
                          "name": "setup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4068,
                          "src": "2924:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 4136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2933:1:24",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2924:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61726b6574206e6f7420696e20636f6e73747275637465642073746174652e",
                        "id": 4138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2936:34:24",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0916017807ad112289ed5a2d4546c9ea2f950081feba09c96967375e67a8700",
                          "typeString": "literal_string \"Market not in constructed state.\""
                        },
                        "value": "Market not in constructed state."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0916017807ad112289ed5a2d4546c9ea2f950081feba09c96967375e67a8700",
                          "typeString": "literal_string \"Market not in constructed state.\""
                        }
                      ],
                      "id": 4134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2916:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2916:55:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4140,
                  "nodeType": "ExpressionStatement",
                  "src": "2916:55:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4141,
                      "name": "foresightVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4077,
                      "src": "2981:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ForesightVault_$3373",
                        "typeString": "contract ForesightVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4146,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3025:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RealityMarket_$4388",
                                "typeString": "contract RealityMarket"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RealityMarket_$4388",
                                "typeString": "contract RealityMarket"
                              }
                            ],
                            "id": 4145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3017:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4144,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3017:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 4147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3017:13:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2998:18:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_ForesightVault_$3373_$",
                          "typeString": "function (address) returns (contract ForesightVault)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 4142,
                          "name": "ForesightVault",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3373,
                          "src": "3002:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ForesightVault_$3373",
                            "typeString": "contract ForesightVault"
                          }
                        }
                      },
                      "id": 4148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2998:33:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ForesightVault_$3373",
                        "typeString": "contract ForesightVault"
                      }
                    },
                    "src": "2981:50:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ForesightVault_$3373",
                      "typeString": "contract ForesightVault"
                    }
                  },
                  "id": 4150,
                  "nodeType": "ExpressionStatement",
                  "src": "2981:50:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4151,
                      "name": "setup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4068,
                      "src": "3041:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 4152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3049:1:24",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "3041:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4154,
                  "nodeType": "ExpressionStatement",
                  "src": "3041:9:24"
                }
              ]
            },
            "documentation": {
              "id": 4131,
              "nodeType": "StructuredDocumentation",
              "src": "2831:36:24",
              "text": "@notice Creates Foresight Tokens"
            },
            "functionSelector": "a85195b6",
            "id": 4156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeVault",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2896:2:24"
            },
            "returnParameters": {
              "id": 4133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2906:0:24"
            },
            "scope": 4388,
            "src": "2872:185:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4186,
              "nodeType": "Block",
              "src": "3157:195:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4161,
                          "name": "setup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4068,
                          "src": "3175:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 4162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3184:1:24",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "3175:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61726b6574206e6f7420696e20666f726573696768742073746174652e",
                        "id": 4164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3187:32:24",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2fc9ec032ca81fe346fa545b4986cd2f3e4f19822802529e4f6d8a734ede7a10",
                          "typeString": "literal_string \"Market not in foresight state.\""
                        },
                        "value": "Market not in foresight state."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2fc9ec032ca81fe346fa545b4986cd2f3e4f19822802529e4f6d8a734ede7a10",
                          "typeString": "literal_string \"Market not in foresight state.\""
                        }
                      ],
                      "id": 4160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3167:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3167:53:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4166,
                  "nodeType": "ExpressionStatement",
                  "src": "3167:53:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4167,
                      "name": "voting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4071,
                      "src": "3230:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MarketVoting_$3801",
                        "typeString": "contract MarketVoting"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4170,
                          "name": "votingEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4064,
                          "src": "3256:13:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4171,
                          "name": "visionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4043,
                          "src": "3271:13:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3239:16:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_address_$returns$_t_contract$_MarketVoting_$3801_$",
                          "typeString": "function (uint256,address) returns (contract MarketVoting)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 4168,
                          "name": "MarketVoting",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 3801,
                          "src": "3243:12:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketVoting_$3801",
                            "typeString": "contract MarketVoting"
                          }
                        }
                      },
                      "id": 4172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3239:46:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MarketVoting_$3801",
                        "typeString": "contract MarketVoting"
                      }
                    },
                    "src": "3230:55:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MarketVoting_$3801",
                      "typeString": "contract MarketVoting"
                    }
                  },
                  "id": 4174,
                  "nodeType": "ExpressionStatement",
                  "src": "3230:55:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4175,
                      "name": "votingAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4074,
                      "src": "3295:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4178,
                          "name": "voting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4071,
                          "src": "3319:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketVoting_$3801",
                            "typeString": "contract MarketVoting"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MarketVoting_$3801",
                            "typeString": "contract MarketVoting"
                          }
                        ],
                        "id": 4177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3311:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4176,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3311:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 4179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3311:15:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3295:31:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4181,
                  "nodeType": "ExpressionStatement",
                  "src": "3295:31:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4182,
                      "name": "setup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4068,
                      "src": "3336:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 4183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3344:1:24",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "3336:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4185,
                  "nodeType": "ExpressionStatement",
                  "src": "3336:9:24"
                }
              ]
            },
            "documentation": {
              "id": 4157,
              "nodeType": "StructuredDocumentation",
              "src": "3063:54:24",
              "text": "@notice Creates Foresight Tokens and Market Voting"
            },
            "functionSelector": "6d04aae2",
            "id": 4187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeVoting",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3147:2:24"
            },
            "returnParameters": {
              "id": 4159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3157:0:24"
            },
            "scope": 4388,
            "src": "3122:230:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4220,
              "nodeType": "Block",
              "src": "3623:197:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4194,
                          "name": "setup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4068,
                          "src": "3641:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 4195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3650:1:24",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "3641:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61726b6574207365747570206e6f7420636f6d706c657465",
                        "id": 4197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3653:27:24",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_623024175515d711f509738f72f233ffb5870d3f6a5ee4dfc1d8556c36df868c",
                          "typeString": "literal_string \"Market setup not complete\""
                        },
                        "value": "Market setup not complete"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_623024175515d711f509738f72f233ffb5870d3f6a5ee4dfc1d8556c36df868c",
                          "typeString": "literal_string \"Market setup not complete\""
                        }
                      ],
                      "id": 4193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3633:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3633:48:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4199,
                  "nodeType": "ExpressionStatement",
                  "src": "3633:48:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4203,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3718:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3718:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4207,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3738:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RealityMarket_$4388",
                              "typeString": "contract RealityMarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RealityMarket_$4388",
                              "typeString": "contract RealityMarket"
                            }
                          ],
                          "id": 4206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3730:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4205,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3730:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3730:13:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4209,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4190,
                        "src": "3745:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4200,
                        "name": "currencyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4040,
                        "src": "3691:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1181",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1162,
                      "src": "3691:26:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3691:61:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4211,
                  "nodeType": "ExpressionStatement",
                  "src": "3691:61:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4215,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3794:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3794:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4217,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4190,
                        "src": "3806:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4212,
                        "name": "foresightVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4077,
                        "src": "3762:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForesightVault_$3373",
                          "typeString": "contract ForesightVault"
                        }
                      },
                      "id": 4214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintCompleteSets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3318,
                      "src": "3762:31:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3762:51:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4219,
                  "nodeType": "ExpressionStatement",
                  "src": "3762:51:24"
                }
              ]
            },
            "documentation": {
              "id": 4188,
              "nodeType": "StructuredDocumentation",
              "src": "3358:214:24",
              "text": "@notice Create a complete set of tokens using the currencyToken 1 to 1 and store it.\n @dev Requires currency token approval.\n @param amount Amount of currency to take and number of shares to mint."
            },
            "functionSelector": "ebb01e65",
            "id": 4221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintCompleteSets",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4190,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4221,
                  "src": "3603:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4189,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3603:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3602:13:24"
            },
            "returnParameters": {
              "id": 4192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3623:0:24"
            },
            "scope": 4388,
            "src": "3577:243:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4265,
              "nodeType": "Block",
              "src": "4050:246:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4232,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4088:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4088:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4234,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4224,
                        "src": "4100:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4229,
                        "name": "foresightVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4077,
                        "src": "4060:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForesightVault_$3373",
                          "typeString": "contract ForesightVault"
                        }
                      },
                      "id": 4231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnYesShort",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3336,
                      "src": "4060:27:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4060:47:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4236,
                  "nodeType": "ExpressionStatement",
                  "src": "4060:47:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4240,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4143:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4143:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4242,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4224,
                        "src": "4155:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4237,
                        "name": "foresightVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4077,
                        "src": "4117:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForesightVault_$3373",
                          "typeString": "contract ForesightVault"
                        }
                      },
                      "id": 4239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnNoLong",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3354,
                      "src": "4117:25:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4117:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4244,
                  "nodeType": "ExpressionStatement",
                  "src": "4117:45:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4248,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4199:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4199:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4250,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4224,
                        "src": "4211:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4245,
                        "name": "foresightVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4077,
                        "src": "4172:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForesightVault_$3373",
                          "typeString": "contract ForesightVault"
                        }
                      },
                      "id": 4247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnInvalid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3372,
                      "src": "4172:26:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 4251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4172:46:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4252,
                  "nodeType": "ExpressionStatement",
                  "src": "4172:46:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4258,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4263:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RealityMarket_$4388",
                              "typeString": "contract RealityMarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RealityMarket_$4388",
                              "typeString": "contract RealityMarket"
                            }
                          ],
                          "id": 4257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4255:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4256,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4255:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4255:13:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4260,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4270:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4270:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4262,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4224,
                        "src": "4282:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4253,
                        "name": "currencyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4040,
                        "src": "4228:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1181",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1162,
                      "src": "4228:26:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4228:61:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4264,
                  "nodeType": "ExpressionStatement",
                  "src": "4228:61:24"
                }
              ]
            },
            "documentation": {
              "id": 4222,
              "nodeType": "StructuredDocumentation",
              "src": "3826:160:24",
              "text": "@notice Burns a complete set of Foresight tokens for the given amount and returns currency.\n @param amount Amount of Foresight of each token to burn."
            },
            "functionSelector": "f3a8a232",
            "id": 4266,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4227,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4226,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2723,
                  "src": "4037:12:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4037:12:24"
              }
            ],
            "name": "burnCompleteSets",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4224,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4266,
                  "src": "4017:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4223,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4017:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4016:13:24"
            },
            "returnParameters": {
              "id": 4228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4050:0:24"
            },
            "scope": 4388,
            "src": "3991:305:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4281,
              "nodeType": "Block",
              "src": "4510:45:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4277,
                        "name": "outcome",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4269,
                        "src": "4532:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4278,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4271,
                        "src": "4541:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4274,
                        "name": "voting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4071,
                        "src": "4520:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketVoting_$3801",
                          "typeString": "contract MarketVoting"
                        }
                      },
                      "id": 4276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3571,
                      "src": "4520:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_int256_$_t_uint256_$returns$__$",
                        "typeString": "function (int256,uint256) external"
                      }
                    },
                    "id": 4279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4520:28:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4280,
                  "nodeType": "ExpressionStatement",
                  "src": "4520:28:24"
                }
              ]
            },
            "documentation": {
              "id": 4267,
              "nodeType": "StructuredDocumentation",
              "src": "4302:156:24",
              "text": "@notice Passes vote to the voting construct.\n @param outcome Outcome to vote on.\n @param amount Amount of Vision token to stake on a vote."
            },
            "functionSelector": "3d402f7e",
            "id": 4282,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4269,
                  "mutability": "mutable",
                  "name": "outcome",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4282,
                  "src": "4477:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 4268,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "4477:3:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4271,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4282,
                  "src": "4490:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4270,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4490:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4476:26:24"
            },
            "returnParameters": {
              "id": 4273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4510:0:24"
            },
            "scope": 4388,
            "src": "4463:92:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4292,
              "nodeType": "Block",
              "src": "4656:47:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4288,
                        "name": "voting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4071,
                        "src": "4673:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketVoting_$3801",
                          "typeString": "contract MarketVoting"
                        }
                      },
                      "id": 4289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "winningOutcome",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3649,
                      "src": "4673:21:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_int256_$",
                        "typeString": "function () external returns (int256)"
                      }
                    },
                    "id": 4290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4673:23:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 4287,
                  "id": 4291,
                  "nodeType": "Return",
                  "src": "4666:30:24"
                }
              ]
            },
            "documentation": {
              "id": 4283,
              "nodeType": "StructuredDocumentation",
              "src": "4561:43:24",
              "text": "@notice returns voting winning outcome."
            },
            "functionSelector": "9b34ae03",
            "id": 4293,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "winningOutcome",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4632:2:24"
            },
            "returnParameters": {
              "id": 4287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4286,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4293,
                  "src": "4651:3:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 4285,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "4651:3:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4650:5:24"
            },
            "scope": 4388,
            "src": "4609:94:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4305,
              "nodeType": "Block",
              "src": "4865:97:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4297,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4883:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 4298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4883:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4299,
                          "name": "votingEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4064,
                          "src": "4901:13:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4883:31:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "566f7465206973206e6f742079657420636f6d706c65746564",
                        "id": 4301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4916:27:24",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_702a6f0d860c1a29a5ff86c01de954646f32302da612b61137fc7f276267ac05",
                          "typeString": "literal_string \"Vote is not yet completed\""
                        },
                        "value": "Vote is not yet completed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_702a6f0d860c1a29a5ff86c01de954646f32302da612b61137fc7f276267ac05",
                          "typeString": "literal_string \"Vote is not yet completed\""
                        }
                      ],
                      "id": 4296,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4875:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4875:69:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4303,
                  "nodeType": "ExpressionStatement",
                  "src": "4875:69:24"
                },
                {
                  "id": 4304,
                  "nodeType": "PlaceholderStatement",
                  "src": "4954:1:24"
                }
              ]
            },
            "documentation": {
              "id": 4294,
              "nodeType": "StructuredDocumentation",
              "src": "4709:120:24",
              "text": "@notice Asserts voting is completed.\n @dev Votes are completed when the timestamp is after the votingEndTime."
            },
            "id": 4306,
            "name": "assertVotingCompleted",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 4295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4865:0:24"
            },
            "src": "4834:128:24",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4386,
              "nodeType": "Block",
              "src": "5196:579:24",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 4321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4316,
                          "name": "voting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4071,
                          "src": "5256:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketVoting_$3801",
                            "typeString": "contract MarketVoting"
                          }
                        },
                        "id": 4317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "winningOutcome",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3649,
                        "src": "5256:21:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_int256_$",
                          "typeString": "function () external returns (int256)"
                        }
                      },
                      "id": 4318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5256:23:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "-",
                      "prefix": true,
                      "src": "5283:5:24",
                      "subExpression": {
                        "argumentTypes": null,
                        "hexValue": "31653138",
                        "id": 4319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5284:4:24",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_minus_1000000000000000000_by_1",
                        "typeString": "int_const -1000000000000000000"
                      }
                    },
                    "src": "5256:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4339,
                  "nodeType": "IfStatement",
                  "src": "5252:163:24",
                  "trueBody": {
                    "id": 4338,
                    "nodeType": "Block",
                    "src": "5290:125:24",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4325,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5331:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5331:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4327,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4309,
                              "src": "5343:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4322,
                              "name": "foresightVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4077,
                              "src": "5304:14:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForesightVault_$3373",
                                "typeString": "contract ForesightVault"
                              }
                            },
                            "id": 4324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burnInvalid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3372,
                            "src": "5304:26:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 4328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5304:46:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4329,
                        "nodeType": "ExpressionStatement",
                        "src": "5304:46:24"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4333,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5387:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5387:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31653138",
                              "id": 4335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5399:4:24",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4330,
                              "name": "currencyToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4040,
                              "src": "5364:13:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1181",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1130,
                            "src": "5364:22:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 4336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5364:40:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4337,
                        "nodeType": "ExpressionStatement",
                        "src": "5364:40:24"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 4344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4340,
                          "name": "voting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4071,
                          "src": "5446:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketVoting_$3801",
                            "typeString": "contract MarketVoting"
                          }
                        },
                        "id": 4341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "winningOutcome",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3649,
                        "src": "5446:21:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_int256_$",
                          "typeString": "function () external returns (int256)"
                        }
                      },
                      "id": 4342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5446:23:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31653138",
                      "id": 4343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5473:4:24",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "5446:31:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4362,
                  "nodeType": "IfStatement",
                  "src": "5442:163:24",
                  "trueBody": {
                    "id": 4361,
                    "nodeType": "Block",
                    "src": "5479:126:24",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4348,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5521:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5521:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4350,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4309,
                              "src": "5533:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4345,
                              "name": "foresightVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4077,
                              "src": "5493:14:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForesightVault_$3373",
                                "typeString": "contract ForesightVault"
                              }
                            },
                            "id": 4347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burnYesShort",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3336,
                            "src": "5493:27:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 4351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5493:47:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4352,
                        "nodeType": "ExpressionStatement",
                        "src": "5493:47:24"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4356,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5577:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5577:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31653138",
                              "id": 4358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5589:4:24",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4353,
                              "name": "currencyToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4040,
                              "src": "5554:13:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1181",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1130,
                            "src": "5554:22:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 4359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5554:40:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4360,
                        "nodeType": "ExpressionStatement",
                        "src": "5554:40:24"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 4367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 4363,
                          "name": "voting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4071,
                          "src": "5618:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketVoting_$3801",
                            "typeString": "contract MarketVoting"
                          }
                        },
                        "id": 4364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "winningOutcome",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3649,
                        "src": "5618:21:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_int256_$",
                          "typeString": "function () external returns (int256)"
                        }
                      },
                      "id": 4365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5618:23:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5645:1:24",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5618:28:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4385,
                  "nodeType": "IfStatement",
                  "src": "5614:155:24",
                  "trueBody": {
                    "id": 4384,
                    "nodeType": "Block",
                    "src": "5648:121:24",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4371,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5688:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5688:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4373,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4309,
                              "src": "5700:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4368,
                              "name": "foresightVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4077,
                              "src": "5662:14:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForesightVault_$3373",
                                "typeString": "contract ForesightVault"
                              }
                            },
                            "id": 4370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burnNoLong",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3354,
                            "src": "5662:25:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 4374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5662:45:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4375,
                        "nodeType": "ExpressionStatement",
                        "src": "5662:45:24"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4379,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5744:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5744:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5756:1:24",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4376,
                              "name": "currencyToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4040,
                              "src": "5721:13:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1181",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1130,
                            "src": "5721:22:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 4382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5721:37:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4383,
                        "nodeType": "ExpressionStatement",
                        "src": "5721:37:24"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4307,
              "nodeType": "StructuredDocumentation",
              "src": "4968:138:24",
              "text": "@notice Withdraws winning token currency based on voting outcomes for binary market.\n @param amount Amount of currency to swap."
            },
            "functionSelector": "0b8a5c46",
            "id": 4387,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4312,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4311,
                  "name": "assertVotingCompleted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4306,
                  "src": "5161:21:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5161:21:24"
              },
              {
                "arguments": null,
                "id": 4314,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4313,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2723,
                  "src": "5183:12:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5183:12:24"
              }
            ],
            "name": "withdrawPayoutBinary",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4309,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4387,
                  "src": "5141:11:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4308,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5141:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5140:13:24"
            },
            "returnParameters": {
              "id": 4315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5196:0:24"
            },
            "scope": 4388,
            "src": "5111:664:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4389,
        "src": "502:5276:24"
      }
    ],
    "src": "39:5740:24"
  },
  "bytecode": "",
  "deployedBytecode": "",
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang",
    "optimizer": {
      "enabled": true,
      "runs": 1
    },
    "evmVersion": "petersburg"
  }
}
